<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Julia Evans]]></title>
  <link href="http://jvns.ca/atom.xml" rel="self"/>
  <link href="https://jvns.ca/categories/interviewing/atom/index.xml"/>
  <updated>0001-01-01T00:00:00+00:00</updated>
  <id>http://jvns.ca</id>
  <author>
    <name><![CDATA[Julia Evans]]></name>
  </author>
  <generator uri="http://gohugo.io/">Hugo</generator>

  
  <entry>
    <title type="html"><![CDATA[Sounding confident in interviews]]></title>
    <link href="https://jvns.ca/blog/2014/02/03/sounding-confident-in-interviews/"/>
    <updated>2014-02-03T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2014/02/03/sounding-confident-in-interviews/</id>
    <content type="html"><![CDATA[<p>Confession: I am often terrible at sounding confident. I have been
known to answer questions like &ldquo;do you know statistics?&rdquo; with &ldquo;no, I
don&rsquo;t know anything about statistics&rdquo;, followed by an eventual
admission of &ldquo;well except that I have a math degree and I know at
least what a biased estimator is and a whole bunch of probability and
I did a bunch of Bayesian stats in my last job and&hellip;&ldquo;.</p>

<p>So, I struggle with underselling myself, and I forget sometimes that
&ldquo;I don&rsquo;t have a PhD in this&rdquo; isn&rsquo;t the same as &ldquo;I don&rsquo;t know
anything&rdquo;.</p>

<p>Some strategies I&rsquo;ve been using:</p>

<p></p>

<h3 id="1-being-factual">1. Being factual.</h3>

<p>If someone asks me how familiar I am with Linux, I <em>could</em> say &ldquo;well,
I know enough, I think, probably, kind of&rdquo;. Instead now I say &ldquo;I&rsquo;ve
been using it every day for 10 years.&ldquo;, which is not an exaggeration,
and doesn&rsquo;t undersell my experience.</p>

<p>I find saying how long I&rsquo;ve been using a technology and talking
briefly about what kinds of projects I&rsquo;ve done with it easier (and
more helpful to the interviewer) than giving any kind of value
judgment on my experience (I am a wizard!).</p>

<h3 id="2-pretend-that-they-actually-don-t-know-the-answer-to-the-question">2. Pretend that they actually don&rsquo;t know the answer to the question</h3>

<p>This of course don&rsquo;t mean be condescending. Pretend that they don&rsquo;t
know the answer, but that they&rsquo;re <em>really really smart</em>.</p>

<p>Someone asked me what a filesystem was. I floundered for a second
here, and then remembered this principle! Then I answered something
like &ldquo;Well, on a hard drive you have a bunch of binary data, and a
priori it&rsquo;s not organized in any particular way, which makes it hard
to find the data you need. Filesystems are a way of organizing all
that data, typically into a directory tree, so that you can find
things!&rdquo;</p>

<h3 id="3-saying-what-i-do-know-instead-of-what-i-don-t-know">3. Saying what I do know, instead of what I don&rsquo;t know</h3>

<p>Someone asked me what I knew about making database systems more
reliable. I <em>could</em> have said &ldquo;oh, I don&rsquo;t know anything!&rdquo;.</p>

<p>Instead I said &ldquo;Well, I know that people use replication and sharding.
I haven&rsquo;t worked much with either of these, but I think replication is
&hellip;. and sharding is &hellip;&ldquo;.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What my technical interviews have looked like]]></title>
    <link href="https://jvns.ca/blog/2014/01/16/what-my-technical-interviews-have-looked-like/"/>
    <updated>2014-01-16T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2014/01/16/what-my-technical-interviews-have-looked-like/</id>
    <content type="html"><![CDATA[<p>In the last month I&rsquo;ve done what feels like 100 interviews. It&rsquo;s
easier than I thought it would be. I&rsquo;m getting much better at talking
about myself to strangers on the phone, which is an awesome thing to
be able to practice. It&rsquo;s also interesting to see different approaches
to interviewing and get a feel for the culture at the companies.</p>

<p>I feel like at some point someone&rsquo;s going to ask me what kind of
questions get asked in technical interviews. So here are some
anecdotes. This is probably from 15-30 technical interviews / phone
screens, across a bunch of tech companies of different sizes. (the
number depends on how you count interviews)</p>

<p></p>

<h2 id="questions-about-my-background">Questions about my background</h2>

<p>Most people ask me variations on these questions:</p>

<ul>
<li>Tell me a bit about your background.</li>
<li>Tell me a bit about <a href="from my resume">Job X</a></li>
<li>What are you looking for in a job?</li>
<li>Do you have any questions for me?</li>
</ul>

<p>I was originally pretty intimidated by all these questions, but I
think they&rsquo;re actually a gift (if initially a difficult gift).</p>

<p><strong>&ldquo;Tell me about your background&rdquo;</strong> gives you a chance to tell a story
  about your career so far and explain where you&rsquo;re coming from a
  little bit. I find it useful enough that now if somebody doesn&rsquo;t
  ask, I&rsquo;ll often say &ldquo;alright, let me tell you a bit about where I&rsquo;m
  coming from&rdquo; at the beginning of a first phone interview with a
  company. I probably talk for 2-5 minutes.</p>

<p>For me this looks like &ldquo;I went to school and I did X, and then I
wanted to change it up a bit so I did a job doing Y, but I wanted a
bit more Q in my career so I switched to industry Z&rdquo;. It&rsquo;s good to
talk about your accomplishments here.</p>

<p>For <strong>&ldquo;Tell me a bit about [Job X]&rdquo;</strong>, I make sure I can talk about
projects I worked on at each of my previous jobs in an engaging way.
I&rsquo;ve also had people ask me about my master&rsquo;s thesis, so I make sure I
can explain that.</p>

<p>Some good things to talk about would be</p>

<ul>
<li>What was the goal of the project?</li>
<li>What was interesting about the project?</li>
<li>What did you accomplish? Why was it a success?</li>
</ul>

<p><strong>What are you looking for in a job?</strong> is a bit tough to give pithy
  answers to, but good! It&rsquo;s also a good thing to think about for
  myself, so preparing for a question like this is definitely a good
  use of time.</p>

<p><strong>Do you have any questions for me?</strong> is something I&rsquo;ve thought about
  a lot, and wrote about in
  <a href="http://jvns.ca/blog/2013/12/30/questions-im-asking-in-interviews/">Questions I&rsquo;m asking in interviews</a>.
  I may write more about this later because it&rsquo;s really important and
  I find it pretty hard to get right.</p>

<h2 id="technical-questions">Technical questions</h2>

<p>I&rsquo;ve been asked exactly zero tricky math questions or questions like
&ldquo;How many bingo balls could fit in the Empire State Building&rdquo;.
Hopefully the tech industry has gotten over these.</p>

<p>Here are some kinds of questions people have asked me:</p>

<ul>
<li>I saw <a href="http://www.rust-lang.org/">Rust</a> on your resume! That sounds
cool! Tell me about it!</li>
<li>Tell me what happens when you go to
<a href="http://google.com">http://google.com</a>, in as much detail as you
can.</li>
<li>Write code to solve this [non-tricky but not trivial] algorithm
program. (either in a Google doc or write code that will actually
run on my computer)</li>
<li>Tell me more about your
<a href="https://github.com/jvns/teeceepee">TCP stack</a>! (+ more followup
questions)</li>
<li>Statistics questions, when applying for jobs that involve data
analysis. Bayes&rsquo; theorem and things.</li>
<li>How would you approach [machine learning problem]?</li>
<li>Tell me about some performance problems you&rsquo;ve dealt with and what
you did.</li>
<li>Algorithm question, and

<ul>
<li>Tell me an algorithm for this.</li>
<li>Talk about the complexity.</li>
<li>How long do you think this would actually take to run, on a
billion numbers? (seconds/minutes/hours?)</li>
</ul></li>
<li>What do you know about distributed systems / concurrency? (+ some
followup)</li>
<li>What databases have you used? (+ some questions about database
design and query runtime)</li>
<li>What does <a href="http://d3js.org/">D3</a> do? What have you used it for?
Would you recommend using it for X?</li>
<li>Tell me about a project you did with
[specific technology from my resume]</li>
<li>Build a small class that does [thing].</li>
<li>Let&rsquo;s pair and fix a bug in a library!</li>
<li>Let&rsquo;s pair and write a simple classifier and evaluate it!</li>
<li>Bring some code you&rsquo;ve written and explain it to someone.</li>
<li>Write down code to do [thing] on a whiteboard. (only in one
interview, so far).</li>
<li>Some C-specific questions</li>
<li>Talk about a project you did where something was hard.</li>
</ul>

<p>Mostly nobody has asked me</p>

<ul>
<li>whiteboard coding</li>
<li>specific questions about how a programming language works</li>
</ul>

<p>I think people are replacing &ldquo;how many golf balls can fit in the
Empire State Building&rdquo; with more concrete questions about estimating
program runtime and space requirements. I am very happy about this.</p>

<p>One takeaway from all this is that having weird things like Rust and
Julia on my resume has been a fun time &ndash; people ask about Rust a lot,
and I get to have good conversations about it. They are in a short
&ldquo;things I know a little bit about&rdquo; section on my resume and it is
great.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Questions I&#39;m asking in interviews]]></title>
    <link href="https://jvns.ca/blog/2013/12/30/questions-im-asking-in-interviews/"/>
    <updated>2013-12-30T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2013/12/30/questions-im-asking-in-interviews/</id>
    <content type="html"><![CDATA[

<p>In a fit of &ldquo;open source your interview process&rdquo;, I tweeted yesterday
with the list of questions I&rsquo;m drawing from when interviewing. A lot
of people
<a href="https://gist.github.com/jvns/8178076">responded in the gist</a> with
amazing suggestions, and I thought I&rsquo;d consolidate them here so they
don&rsquo;t get lost in my pile of gists.</p>

<p>My basic strategy is to spend 20 minutes before each interview I do
and pick some appropriate questions from this list. I&rsquo;ve tried to
categorize them a bit. A lot of these are outright stolen from
<a href="https://medium.com/what-i-learned-building/f7a161b5bc70">Edward O&rsquo;Campo-Gooding&rsquo;s list of questions</a>,
as well as from various people at
<a href="http://hackerschool.com">Hacker School</a>. I&rsquo;d love suggestions for
more!</p>

<p>Special thanks to <a href="https://twitter.com/bmastenbrook">@bmastenbrook</a>,
<a href="https://twitter.com/bmastenbrook">@marcprecipice</a>,
<a href="https://twitter.com/danluu">@danluu</a>,
<a href="https://twitter.com/kelseyinnis">@kelseyinnis</a>,
<a href="https://twitter.com/zmagg">@zmagg</a>,
<a href="https://twitter.com/graue">@graue</a>, and
<a href="https://twitter.com/ircolle">@ircolle</a> for awesome question
suggestions.</p>

<p><strong>Edit:</strong> A few more things:</p>

<ul>
<li>I don&rsquo;t ask all of these in first interviews. Use your discretion,
and do what you feel comfortable doing.</li>
<li>Asking a lot of questions shows that you value yourself and that
you&rsquo;re careful when making decisions. It&rsquo;s a good thing.</li>
<li>If you have an offer, you can schedule extra conversations if you
feel that not all of your questions have been answered.</li>
<li>It can be worth asking the same question to more than one person.</li>
</ul>

<h3 id="engineering-practices">Engineering practices</h3>

<ul>
<li>What version control system do you use? (if none, the interview
should be over =))</li>
<li>Do you test your code?</li>
<li>How do you make sure that all code is understood by more than one
person?</li>
<li>Do you do code review? Does all code get reviewed?</li>
<li>Do you have an issue tracker?</li>
<li>Describe your deployment process &ndash; how do you find bugs in your
team&rsquo;s code? What recourse do you have when you find a serious bug
in production code?</li>
<li>Who is responsible for doing deployment? How often do you deploy?</li>
<li>How do you think about code correctness?</li>
<li>When something goes wrong, how do you handle it? Do devs get shamed
for breaking the build?</li>
<li>How/when do developers talk to non-developers? Is it easy to talk to
the people who are will be using your product?</li>
<li>Can I see some code the team I&rsquo;m interviewing for has written? (from
an open-source project you work on, for example)</li>
<li>Who are the people at your company with a lot of depth of
experience? Will I be able to talk to them?</li>
<li>What&rsquo;s your approach to technical debt?</li>
</ul>

<h3 id="management-style">Management style</h3>

<ul>
<li>How does engineering work get assigned?</li>
<li>How are technical decisions made and communicated?</li>
<li>How do you balance support work and feature development?</li>
<li>Can you give me an example of someone who&rsquo;s been in a technical role
at your company for a long time, and how their responsibilities and
role have changed? (I <em>love</em> this question)</li>
<li>Do you have a dedicated designer? QA? Technical writer? Dev manager?</li>
<li>How often do you have meetings? Are there any scheduled/standing
meetings? Who talks to customers (if appropriate) and how?</li>
<li>Has there been a situation where someone raised an ethical concern?
If so, how was it handled? If not, have there really not been any?</li>
<li>How are decisions made? Is architecture dictated top down? Are ideas
from anyone welcomed? If so, in what scope/context?</li>
<li>How are disagreements solved - both technical disagreements and
other kinds? What happens when personalities clash?</li>
<li>Can you tell me about a time when you&rsquo;ve had to let someone go?</li>
<li>Is there a written roadmap all developers can see? How far into the
future does it extend? How closely is it followed?</li>
<li>How is performance evaluated?</li>
</ul>

<h3 id="quality-of-life">Quality of life</h3>

<ul>
<li>How much vacation do people get? If there&rsquo;s &ldquo;unlimited&rdquo; vacation,
how much vacation do people normally take?</li>
<li>Is it possible to take sabbaticals or unpaid vacation?</li>
<li>How many women work for you? What&rsquo;s your process for making sure you
have diversity in other ways?</li>
<li>How many hours do people work in an average week? In your busiest
weeks?</li>
<li>Is variability tolerated or is everyone expected to be on the same
schedule?</li>
<li>What time do people normally leave work?</li>
<li>Would I need to be on call? How often?</li>
<li>How often are there emergencies or times when people have to work
extra hours?</li>
<li>What is your turnover rate like? How many devs were hired last year
and how many left?</li>
<li>What&rsquo;s your retention rate of women over 1.5 years? Do you think you
could have done anything differently to keep people who left?</li>
<li>Do people work on the weekend?</li>
<li>Do people check in when they&rsquo;re on vacation? How often?</li>
<li>Is it possible to work from home, say, 1 or 2 days a week? Does
anyone do this? (can be a nice option to have)</li>
<li>Does this position require travel? How often?</li>
</ul>

<p>As many of these as possible are &ldquo;statistical&rdquo; questions &ndash; a company may say that they &ldquo;don&rsquo;t have hours&rdquo;, but if everyone leaves at 9pm that&rsquo;s not a good sign.</p>

<h3 id="community-involvement">Community involvement</h3>

<ul>
<li>Do you contribute to open source projects? Which projects? Which teams work on open source?
Do you work mostly in the community or do you have a private fork?</li>
<li>Do your employees speak at conferences about your work?</li>
</ul>

<h3 id="career-development">Career development</h3>

<ul>
<li>Are employees encouraged to go speak at conferences?</li>
<li>Do you cover travel to conferences? How many conferences a year do
devs typically go to?</li>
<li>Does your company support continuing education? (will they pay for
employees to do a master&rsquo;s degree?)</li>
<li>In what other ways do you support career development?</li>
</ul>

<h3 id="culture">Culture</h3>

<ul>
<li>How do you determine if someone is a poor fit for your company?</li>
<li>How are your teams structured? What is the management structure
like?</li>
<li>How often do you pair? What&rsquo;s pairing like? How often do
inexperienced people work directly with experienced people?</li>
<li>What&rsquo;s the onboarding process like?</li>
<li>Is there any sort of institutionalized way of dealing with
plateauing or preventing burnout? (Expecting to hear about rotation
of duties or location, sabbaticals.)</li>
<li>Is it easy to move to other divisions or offices?</li>
<li>How does internal communication work? This one is super important
and I need to remember to ask it more.</li>
<li>Are there catered suppers? (possibly bad)</li>
<li>How many hours a week does senior management work? Do they put in
80-hour weeks?</li>
</ul>

<h3 id="financials-business-model-growth">Financials/business model/growth</h3>

<ul>
<li>Are you profitable?

<ul>
<li>if not, how does this affect what you can do? What&rsquo;s your
planned timeline for becoming profitable?</li>
</ul></li>
<li>How do you make money? (I often explain to my parents or
non-technical friends companies&rsquo; business models to test if they
really make sense.)</li>
<li>How much are you planning to hire in the next year?</li>
<li>Are company financials, minus salaries, transparent throughout the
company?</li>
</ul>

<h3 id="things-to-look-for-in-real-life">Things to look for in real life</h3>

<ul>
<li>How is the office space physically organized?</li>
</ul>

<h3 id="other">Other</h3>

<ul>
<li>Can you tell me about how the interview process is structured? How
many interviews are there?</li>
<li>How often do you offer above asking? Can I speak with someone who
got such an offer?</li>
<li>What do you wish you had known when you joined this company?</li>
<li>Why did you choose to join this company?</li>
<li>What&rsquo;s the single biggest issue or problem facing the
team/department/company?&rdquo; What&rsquo;s currently being done to address it?</li>
</ul>
]]></content>
  </entry>
  
</feed>