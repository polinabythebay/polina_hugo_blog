<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Julia Evans]]></title>
  <link href="http://jvns.ca/atom.xml" rel="self"/>
  <link href="https://jvns.ca/categories/conference/atom/index.xml"/>
  <updated>0001-01-01T00:00:00+00:00</updated>
  <id>http://jvns.ca</id>
  <author>
    <name><![CDATA[Julia Evans]]></name>
  </author>
  <generator uri="http://gohugo.io/">Hugo</generator>

  
  <entry>
    <title type="html"><![CDATA[Women in Machine Learning 2015 (fun!!!)]]></title>
    <link href="https://jvns.ca/blog/2015/12/07/women-in-machine-learning-2015-fun/"/>
    <updated>2015-12-07T20:22:29+00:00</updated>
    <id>https://jvns.ca/blog/2015/12/07/women-in-machine-learning-2015-fun/</id>
    <content type="html"><![CDATA[

<p>I went to the <a href="http://wiml2015.weebly.com/">Women in Machine Learning</a> conference yesterday (part of <a href="http://nips.cc">NIPS</a>). It was SO FUN. I never go to academic conferences, and talking to grad students about their research and what methods they think are exciting is amazing. I actually liked it a lot more than an industry conference because everything was so alien &amp; unfamiliar to me and everyone knew way more about their field than me. I learned more than I did by going to (for instance) PyCon, which is a fantastic industry conference.</p>

<p>It really made me want to reconsider what conferences I go to, and to go to more conferences in fields I&rsquo;m less familiar with.</p>

<p>The organizers did a great job putting it together and the talks were really good.
Here is some stuff I thought was especially exciting! All of these talk descriptions are heavily paraphrased and I have probably misunderstood things. But I thought they were super cool and here&rsquo;s what I got out of them.</p>

<h3 id="is-it-all-in-the-phrasing-by-lillian-lee-https-www-cs-cornell-edu-home-llee">Is it all in the phrasing? (by <a href="https://www.cs.cornell.edu/home/llee/">Lillian Lee</a>)</h3>

<p>She talked about her research on how phrasing affects the impact of, say, a tweet! Here&rsquo;s <a href="https://chenhaot.com/retweetedmore/">a classifier where you can write two tweets</a> and it&rsquo;ll tell you which one it thinks will be retweeted more! And there&rsquo;s a <a href="https://chenhaot.com/retweetedmore/quiz">corresponding quiz</a>! And a paper! I have not yet read the paper.</p>

<p>I really loved this talk because guessing which tweet will get more RTs is a task that humans are ok at (they can guess right something like 75% of the time), but it&rsquo;s not a trivial task! So it&rsquo;s a pretty interesting place to try machine learning. And the methodology they used makes a lot of sense to me (pick tweets tweeted by the same person, that link to the same URL). And then they actually make progress using machine learning to do it! Neat.</p>

<p>I feel like most ML I see is about tasks that humans can get 95% or 100% correct (like distinguishing cats from dogs, or whatever). So doing ML on tasks that have something intrinsically hard about them &ndash; where you maybe <strong>can&rsquo;t</strong> ever get to 100% accuracy &ndash; is really interesting to me.</p>

<p>She said she makes her talks intentionally not very technical, which I LOVED &ndash; she said she prefers to work hard to make the material easy to understand &amp; interesting (without sacrificing rigor), and referred people to read the papers for numbers. a++ this is also what I love to do &lt;3. (convince people to be interested and that your work is obvious, not that you&rsquo;re smart and your work is difficult)</p>

<h3 id="interpretable-machine-learning-human-machine-interaction-by-been-kim-http-people-csail-mit-edu-beenkim">Interpretable machine learning &amp; human-machine interaction (by <a href="http://people.csail.mit.edu/beenkim/">Been Kim</a>)</h3>

<p>OMG. I&rsquo;m trying really hard to make machine learning results more interpretable &amp; debuggable at work (because people need to use the outputs of it!), and when she was like &ldquo;that&rsquo;s my research&rdquo; I really wanted to be best friends.</p>

<p>She showed <a href="https://www.youtube.com/watch?v=8PwHigCDdW8&amp;feature=youtu.be">this YouTube video</a> of a system that automatically clusters students&rsquo; assignments and then shows you the &lsquo;prototype&rsquo; assignments representing each segment! This seems really cool to me &ndash; if I were a teacher and had a system like this that worked well, I could imagine using this to get a sense for what kinds of solutions my students were using, and possibly even as an aid to grading.</p>

<p>She was also super pragmatic about her research! The metric she used to decide whether the interactive system was helpful or not was &ndash; did it cause the human to perform better on the classification task they were working on? All I want is to help humans do better work &amp; save them time so this made me super happy. I think there&rsquo;s a lot of room in ML to enable people and not just replace them.</p>

<h3 id="corinna-cortes-http-research-google-com-pubs-author121-html"><a href="http://research.google.com/pubs/author121.html">Corinna Cortes</a></h3>

<p>omg. She&rsquo;s the head of Google Research NY. omg. She talked about how her team scrapes the web and tries to discover facts (like Barack Obama is married to Michelle Obama). This was an incredibly refreshing talk for me because instead of saying &ldquo;well at Google we do magic&rdquo;, the impression I got was &ldquo;dude this stuff is really hard and involves a lot of really boring HTML and tables&rdquo;. BUT IN THE END WE WON.</p>

<p>She talked about using interpretable models and how they manually look at examples where their algorithm isn&rsquo;t performing well to decide where to focus their efforts. I asked her at the end how important good ML debugging tools were and she was like SO IMPORTANT IF YOU&rsquo;RE NOT LOOKING AT YOUR DATA WHAT ARE YOU EVEN DOING. So now I&rsquo;m even more motivated to build the random forest debugging tool I&rsquo;ve been prototyping on the side.</p>

<p>I&rsquo;ve been doing machine learning for ~3 years now and I still find it so hard, so it&rsquo;s amazing to hear from someone&rsquo;s an expert and talks honestly about how time-intensive building a good model is. I get really mad when people pretend that ML is easy or that if you&rsquo;re smart you can just get good results like magic. &lt;/rant&gt; :)</p>

<p>(sometimes ML really does work that way and the results are magical! those are the most fun days)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AdaCamp Montreal 2015]]></title>
    <link href="https://jvns.ca/blog/2015/04/15/adacamp-montreal-2015/"/>
    <updated>2015-04-15T21:34:16+00:00</updated>
    <id>https://jvns.ca/blog/2015/04/15/adacamp-montreal-2015/</id>
    <content type="html"><![CDATA[

<p>I went to <a href="https://adacamp.org/">AdaCamp</a> these last couple of days. I
want to talk about some of the awesome stuff that happened!</p>

<p>AdaCamp is an unconference, which means that people decide what the
sessions will be about on the first day of the conference. Here are some
things I&rsquo;m thinking about!</p>

<h3 id="testing">Testing</h3>

<p>I went to a really, really interesting session about software testing by
someone who works as a software tester. I work as a developer, and I&rsquo;ve
never worked with a QA team! I didn&rsquo;t know there were people who
specialized in testing software and were really awesome at it who don&rsquo;t
write programs! This was super cool to learn. I still don&rsquo;t know how to
think about separating out the responsibilities of writing the software
and verifying the software &ndash; obviously individual developers also need
to be responsible for writing correct software, and it still feels
strange to me to hand any of that off.</p>

<p>But <a href="https://twitter.com/skamille">Camille Fournier</a> told me on twitter
about user acceptance testing and how you can have a QA team that checks
that the software <em>makes sense to users</em> and, like, talks to them and
stuff, not just software that&rsquo;s theoretically correct. So that&rsquo;s pretty
cool.</p>

<h3 id="awesome-people">Awesome people</h3>

<p>I met a lot of really interesting people! I met sysadmins and people who
had been programming for a long time and software testing and people who
know a lot about science fiction and ham radio and bikes and publishing
and zines and Quebec and libraries and Wikipedia (someone wrote their
<em>dissertation</em> on Wikipedia. Wow.). I learned SO MUCH about Wikipedia.
And almost all of those people identified as women! A++ would meet
delightful people again.</p>

<h3 id="codes-of-conduct">Codes of conduct</h3>

<p>This session convinced me open spaces are a good idea.</p>

<p>Initially I didn&rsquo;t want to go because I was interested in some very
specific aspects of codes of conduct (deescalating situations + how to
make CoCs less intimidating to people who are genuinely good intentioned
but not familiar with a given community + when to model behavior
implicitly vs writing down explicit rules). And I told someone during a
break that I didn&rsquo;t want to go to the session because I thought people
wouldn&rsquo;t be discussing the thing I wanted to talk about.</p>

<p>And she said AWESOME. THOSE ARE AWESOME THINGS TO TALK ABOUT. COME WITH
ME AND WE WILL TALK ABOUT THAT. And we did! And I don&rsquo;t have answers
about any of those things, but I got to hear some new perspectives and
stories and now I know a couple more things. And the other people seemed
to think the questions I had were interesting &lt;3.</p>

<p>And it made me remember &ndash; when I think that I&rsquo;m the only person who has
a given concern or question or experience, I&rsquo;m usually wrong :)</p>

<h3 id="moderation">Moderation</h3>

<p>There were a lot of unstructured discussion sessions at AdaCamp. This
was really cool, because it means you can cover a lot of ground. I also
was reminded again of how important good moderation + facilitation is,
and how much I want to get better at it. I&rsquo;m working on learning how to:</p>

<ul>
<li>create some explicit structure around a session (&ldquo;let&rsquo;s discuss these
4 topics, and spend ~15 minutes on each one. does that sound good?&ldquo;)</li>
<li>tell someone when they&rsquo;ve said enough &lt;3 (&ldquo;thanks so much! I&rsquo;d love to
hear from some people who haven&rsquo;t said as much yet&rdquo;)</li>
<li>move the discussion back on track if it&rsquo;s veered away (&ldquo;okay awesome!
Does anyone have anything else to say about $topic, or should we move
on to $next_thing?&ldquo;)</li>
</ul>

<p>People take up really incredibly different amounts of space in
discussions, and I really really want to get better at making sure
people who are quieter get a chance to say their super interesting
things. Interrupting people is hard for me!</p>

<p>After AdaCamp I felt like there are a lot of great people in the world
who are trying their best to do what&rsquo;s right and have a lot of good
ideas about how to do that and want to have the same conversations that
I want to have. A little more than usual =)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You can choose who submits talks to your conference]]></title>
    <link href="https://jvns.ca/blog/2015/03/06/you-can-choose-who-submits-talks-to-your-conference/"/>
    <updated>2015-03-06T01:24:29+00:00</updated>
    <id>https://jvns.ca/blog/2015/03/06/you-can-choose-who-submits-talks-to-your-conference/</id>
    <content type="html"><![CDATA[<p>Sometimes I see conference organizers say &ldquo;well, we didn&rsquo;t have a choice about
the talk proposals we got!&rdquo; or &ldquo;we just picked the best ones!&rdquo;. I think we all
know by now that that&rsquo;s bullshit, but just in case &ndash; it&rsquo;s bullshit! =D</p>

<p>We have a choice about who submits talk proposals, and also about who submits
the <em>best</em> talk proposals. I watched somebody I know get talk proposal feedback
today, and their proposal started out good and got dramatically better. Now
it&rsquo;s <em>great</em>.</p>

<p>If you ask someone specifically to consider speaking at your conference,
they&rsquo;re WAY more likely to consider submitting a talk than if you don&rsquo;t. If you
then actively work with some talk submitters to help them focus and improve the
talk they submit, their proposals will get better! And if you choose to focus
your energies to work with (for instance) non-white people more than white
people, then you&rsquo;ll get more and better proposals from people who aren&rsquo;t white.</p>

<p>You can see this with PyCon! 30% of the talks at last year&rsquo;s PyCon were women,
because lots of people have done tons of individual outreach to encourage their
friends to give talks and spent lots of time working with them to write good
proposals. As <a href="https://twitter.com/jessicamckellar/status/413009020522221568">Jessica McKellar says:</a></p>

<blockquote>
<p>Hello from your @PyCon Diversity Outreach Chair. % PyCon talks by women:
(2011: 1%), (2012: 7%), (2013: 15%), (2014: 33%). Outreach works.</p>
</blockquote>

<p>This makes me really happy! It means that if I&rsquo;m working on a conference (like
<a href="http://bangbangcon.com">!!Con</a>), then I know I can help get more diverse
participation by sending emails to individual people who I&rsquo;d like to hear from.
Telling people that I like their work and that I&rsquo;d like for them to talk about
it is super fun! (and true!)</p>

<p><small>
If there&rsquo;s something you find exciting about programming and you often find
you&rsquo;re part of an underrepresented group when you go to conferences, I&rsquo;d <em>love</em>
it if you <a href="http://bangbangcon.com/give-a-talk.html">submitted a talk to !!Con</a>.
Double especially if you live in NYC!
</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Day Texas 2015]]></title>
    <link href="https://jvns.ca/blog/2015/01/12/data-day-texas-2015/"/>
    <updated>2015-01-12T20:57:35+00:00</updated>
    <id>https://jvns.ca/blog/2015/01/12/data-day-texas-2015/</id>
    <content type="html"><![CDATA[

<p>I went to Data Day Texas this past weekend. It was a 1-day conference,
and I learned a lot!</p>

<p>Here are some things I learned! (any misunderstandings are mine, of
course :))</p>

<h3 id="charity-majors-upgrade-your-database-without-losing-your-data-your-performance-or-your-mind">Charity Majors: Upgrade your database &ndash; without losing your data, your performance, or your mind</h3>

<p>This was by far my favorite talk (<a href="https://speakerdeck.com/charity/upgrading-databases-without-losing-your-data-your-perf-or-your-mind">slides are here</a>).
Charity works at <a href="https://parse.com/">Parse</a>, where they manage many
thousands of MongoDB collections (as far as I understand it, at least
one for each of their users). And sometimes they want to upgrade Mongo!</p>

<p>I understood before seeing this talk that doing database upgrades was
hard, and that it&rsquo;s appropriate to be incredibly skeptical, but I didn&rsquo;t
have any clue how to plan to reduce your uncertainty so that you can
actually do the upgrade.</p>

<p>Some things I learned:</p>

<ol>
<li>How bad can it be if you don&rsquo;t test the upgrade properly? (she saw
one kind of query get 100x slower in the worst case, which would be a
disaster). The examples of what can go in an upgrade that she gave
were incredibly interesting.</li>
<li>How much time is it appropriate to spend planning and testing a
database upgrade? (they spend about a year)</li>
<li>How do you know if the new database can handle your production
workload? (snapshot it, take a day&rsquo;s worth of operations and test it
out on a production workload!)</li>
<li>When you actually do the upgrade, how do you do it? (slowly, with
lots of opportunities to roll back along the way)</li>
<li>Does Mongo have merit? (They need to support a ton of very different
workloads for their users, and it&rsquo;s a great fit for that.)</li>
</ol>

<p>There&rsquo;s also a &ldquo;A Very Short List Of Terrible Things Database Upgrades
Have Done To Me&rdquo; slide which is the best.</p>

<p>It gave me a little more appreciation for what it means to do ops at
scale and to keep services running. I pretty rarely see talks that I
feel really advance my understanding of a topic, and this was one of
them.</p>

<p>(also, I think I have a thing or two to learn from her about writing
talk titles)</p>

<h3 id="robert-munro-using-humans-to-make-your-machine-learning-algorithms-dramatically-better">Robert Munro &ndash; using humans to make your machine learning algorithms dramatically better</h3>

<p>Let&rsquo;s say that you&rsquo;re writing a classifier that&rsquo;s doing sentiment
analysis. This is a task that&rsquo;s pretty easy for humans (&ldquo;is &lsquo;had an
amazing time with my friends watching terrible cult movies today&rsquo;
positive?), but hard to do with machine learning, especially if you have
limited training data to use.</p>

<p>He talked about how judiciously incorporating human input to get a
better training set can give you much, much higher accuracy than just
messing with your model parameters.</p>

<p>My absolute favorite thing about this talk was when he talked about the
human/psychological aspects of using people to help you with
classifications! If you&rsquo;re writing a cat classifier and every single
thing you show the human is not a cat, they&rsquo;ll get bored and exhausted.</p>

<p>It made me think a lot about making sure if you&rsquo;re asking people to help
you with a task, you need to</p>

<ol>
<li>make the task interesting</li>
<li>make sure the people helping you out have a lot of impact on your
classification accuracy</li>
<li>make sure that they <em>know</em> how high their impact is, and show them
how the model is improving!</li>
</ol>

<h3 id="ted-dunning-generating-fake-datasets">Ted Dunning &ndash; generating fake datasets</h3>

<p>This was a fun talk about simulating datasets to</p>

<ul>
<li>prove that you&rsquo;re right about the Monty Hall problem</li>
<li>debug a database bug when your client can&rsquo;t give you the data that caused it</li>
<li>do machine learning on data you don&rsquo;t have</li>
</ul>

<p>of these, the first two made the most sense to me &ndash; I had a much harder time
imagining how it would be useful to do machine learning based on a simulated
data set in real life, and I think I missed some of the explanation.</p>

<p>And he told us about a tool called log-synth that he wrote to generate fake
datasets easily! I can pretty easily imagine myself using it to write ML
tutorials :). It&rsquo;s at
<a href="https://github.com/tdunning/log-synth">https://github.com/tdunning/log-synth</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PyData NYC (I gave a machine learning talk! yay!)]]></title>
    <link href="https://jvns.ca/blog/2014/11/27/pydata-nyc-i-gave-a-machine-learning-talk-yay/"/>
    <updated>2014-11-27T01:04:26+00:00</updated>
    <id>https://jvns.ca/blog/2014/11/27/pydata-nyc-i-gave-a-machine-learning-talk-yay/</id>
    <content type="html"><![CDATA[<p>This past weekend I went to PyData NYC. It was super fun! I got to meet
some people who do machine learning in different fields than me (THE
BEST) and a guy at the bar told me about his classmates&rsquo; adventures in
hacking login systems in Novell Netware. (Also the best. It turns out
that one of the nice things about having a blog is that people
occasionally come up to me at conferences and tell me GREAT THINGS).</p>

<p>And I gave my first-ever machine learning talk! I often feel like the
main (only?) thing I&rsquo;ve learned about machine learning so far is how
important it is to evaluate your models and make sure they&rsquo;re actually
getting better. So I gave a talk called &ldquo;Recalling with precision&rdquo; about
that (a terrible pun courtesy of
<a href="http://twitter.com/avibryant">@avibryant</a>).</p>

<p>The basic structure:</p>

<ol>
<li>You&rsquo;re building models, and you do lots of experiments</li>
<li>You want to remember all of the results forever, so that you can tell
if you&rsquo;re improving</li>
<li>Some arguments for why it&rsquo;s important to evaluate whether your models
actually work (for an example of what can go wrong, see <a href="http://mathbabe.org/2012/03/06/the-value-added-teacher-model-sucks/">The Value Added Teacher Model Sucks</a>).</li>
<li>&ldquo;Just remember everything forever&rdquo; is much easier said than done</li>
<li>So let&rsquo;s describe a lightweight system to actually remember some
things forever! (basically: store training results in S3 forever;
make a webapp to draw <a href="https://github.com/stripe/topmodel">lots of graphs</a> using those results)</li>
<li>It exists! It&rsquo;s open source. <a href="http://github.com/stripe/topmodel">http://github.com/stripe/topmodel</a></li>
</ol>

<p>(It&rsquo;s still pretty new. If you try it and have thoughts,
<a href="mailto:julia@stripe.com">let me know?</a>)</p>

<p>People asked lots of questions, so I think it may have been useful. It&rsquo;s
hard to tell, with talks :)</p>

<p>Some things I learned at PyData: (links largely taken from
<a href="https://mdbecker.github.io/blog/2014/11/24/pydata-nyc-the-really-short-version/">Michael Becker&rsquo;s great wrap-up post</a>)</p>

<p></p>

<h2 id="csvkit-is-great">csvkit is great</h2>

<p><a href="http://blog.sashalaundy.com/">Sasha Laundy</a> (who is fantastic) gave a
totally wonderful talk called <a href="http://blog.sashalaundy.com/talks/data-audit/">&ldquo;How to make your future data scientists
love you&rdquo;</a>. She told some
great data horror stories about missing data, data that you can&rsquo;t join,
and talked about some basic tools for auditing datasets to make sure
that it&rsquo;s actually possible to answer questions about data. And she
talked about practical, useful tools like
<a href="https://csvkit.readthedocs.org/en/0.9.0/">csvkit</a>! I have already
discovered that it includes the amazing <code>csvlook</code> which will format your
csv in a human-readable table.</p>

<p>Her talk reminded me of when I used to work for a consulting company and
how hard it is to communicate with clients about what data they need to
provide for you to be able to answer the questions. Communication is
<em>hard</em>.</p>

<h2 id="automatically-training-models">Automatically training models?</h2>

<p>I&rsquo;m usually pretty skeptical when people talk about automatically
training models. <a href="https://dan-blanchard.github.io/">Dan Blanchard</a>
described a <a href="https://scikit-learn-laboratory.readthedocs.org/en/latest/">framework called SKLL</a> for
using scikit-learn a little more easily which seemed plausible to me.
Basically you tell it which models you&rsquo;re interested in experimenting
with (decision trees? random forests? SVM?), make a config file, and
it&rsquo;ll train all of them and give you predictions and serialized models.</p>

<p>It has a <a href="https://scikit-learn-laboratory.readthedocs.org/en/latest/tutorial.html#titanic-config">well-written tutorial</a>.
Good documentation makes me so happy.</p>

<h2 id="blaze-a-different-way-to-run-queries">Blaze: a different way to run queries</h2>

<p>I talked to the folks at Continuum Analytics a little bit about Blaze.</p>

<p>As I understand it, it&rsquo;s a library that translates pandas-like queries</p>

<pre><code class="language-python">negative_balances = t[t.balance &lt; 0]
negative_balances[['user', 'date', 'balance']]
</code></pre>

<p>into SQL queries</p>

<pre><code class="language-sql">SELECT merchant, date, balance
FROM table
WHERE balance &lt; 0
</code></pre>

<p>And it supports more than one database backend! Like CSVs, HDF5 files,
and maybe some other weird formats.</p>

<p>I&rsquo;m still not sure if it&rsquo;s useful to me and it&rsquo;s in a pretty early
stage. But, neat!</p>

<h3 id="things-i-missed">Things I missed</h3>

<p>A few things I want to remind myself to look at later:</p>

<ul>
<li><a href="http://pydata.org/nyc2014/abstracts/#294">Monary: Really fast analysis with MongoDB and NumPy</a> (because &ldquo;really fast analysis&rdquo; and &ldquo;MongoDB&rdquo;? really?)</li>
<li><a href="http://pydata.org/nyc2014/abstracts/#316">Advanced IPython Notebook widgets</a> (because I&rsquo;ve been trying to learn about these interactive widgets <em>forever</em>)</li>
<li><a href="http://pydata.org/nyc2014/abstracts/#331">On building a data science curriculum</a> (in case I ever want to teach a class)</li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Strange Loop 2014]]></title>
    <link href="https://jvns.ca/blog/2014/09/20/strange-loop-2014/"/>
    <updated>2014-09-20T10:29:47+00:00</updated>
    <id>https://jvns.ca/blog/2014/09/20/strange-loop-2014/</id>
    <content type="html"><![CDATA[<p>I spent some of last week at
<a href="https://thestrangeloop.com/">Strange Loop</a>. I met lots of new
curious, friendly, wonderful people, gave a talk that people really
liked, played board games with friends, and generally had a great
time.</p>

<p>It was also kind of a big deal for me personally! A year and a half
ago I gave
<a href="https://www.youtube.com/watch?v=2JJ102ZpoH0">my first lightning talk at a meetup</a>,
and was super scared. I&rsquo;ve heard a lot about how great of a conference
Strange Loop was, and I really wouldn&rsquo;t have anticipated then that</p>

<ul>
<li>I&rsquo;d get to go</li>
<li>they&rsquo;d accept a talk I submitted (<a href="https://www.youtube.com/watch?v=0IQlpFWTFbM">&ldquo;You can be a kernel hacker!&rdquo;</a>)</li>
<li>the room would be packed</li>
<li>people would say things like &ldquo;that was my favorite talk of the
conference&rdquo;</li>
</ul>

<p>I always imagine cool developer conferences like Strange Loop as being
full of wizard developers who know everything about programming. I
was worried that my talk would be too entry-level (I explain what a
kernel is / what a system call is from the ground up, for instance).</p>

<p>It turned out <strong>tons</strong> of people there didn&rsquo;t know a lot about systems
programming / how kernels work, and my choice to make the talk
accessible made a lot of people happy. So far I&rsquo;ve given a bunch of
talks and I&rsquo;ve never regretted trying to make it easy to follow for as
many people as possible.</p>

<p></p>

<p>I collected
<a href="https://storify.com/jvns/you-can-be-a-kernel-hacker-comments">some of the comments from Twitter</a>
to keep me happy on sad days. (also: super useful for convincing
people they should have me speak when submitting future talk
proposals!)</p>

<h3 id="talks-to-watch">talks to watch</h3>

<p>A few wonderful talks that I think are worth watching:</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=yhguOt863nw">Concurrency Options on the JVM</a> by
<a href="http://twitter.com/jessitron">Jessica Kerr</a> was a wonderful
overview of concurrency models in various JVM languages (Akka,
core.async, futures, &hellip;), what tradeoffs they have, and how to
think about them. Every time I&rsquo;ve seen her speak I&rsquo;ve been
impressed.</li>
<li>How Julia Goes Fast by <a href="http://twitter.com/astrieanna">Leah Hanson</a>
was a solid introduction to the choices the Julia language has made
in order to perform well for numerical computations, and how to
write your own fast Julia programs. For some reason the video isn&rsquo;t
up yet.</li>
<li><a href="https://www.youtube.com/watch?v=XmImGiVuJno">Benchmarking: You&rsquo;re Doing It Wrong</a> by
<a href="http://twitter.com/aysylu">Aysylu Greenberg</a> was a <em>wonderful</em> talk
explaining common errors people make when benchmarking, and laying
out strategies for writing better benchmarks. The next time I need
to make a benchmark I will absolutely watch this talk.</li>
<li><a href="https://www.youtube.com/watch?v=QdkS6ZjeR7Q">Jepsen II: Linearizable Boogaloo</a> by
<a href="http://twitter.com/aphyr">Kyle Kingsbury</a> was wonderful, as all of
his talks are. The room was packed, and he struck a great balance
between discussing serious problems he&rsquo;d found in distributed
systems (in this case RabbitMQ and Elastic Search), and
acknowledging that the developers who work on large distributed
systems are solving a <em>really hard problem</em>. The message wasn&rsquo;t that
people building distributed systems are doing bad work, but that we
need to be honest about the tradeoffs that the systems we build are
making, and document known problems. For instance, Elastic Search is
a great search engine, but you should absolutely not use it as a
primary datastore because it can lose your data.</li>
</ul>

<p>Talks I heard good things about, and am planning to watch the videos
of later:</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=FJpb1j2SWfA">Art.js: Transfigure data to Create 21st Century Art</a>
by Sarah Palermo</li>
<li><a href="https://www.youtube.com/watch?v=M4Gsl8sVgdQ">The Sociology of Programming Languages</a>
by Leo Meyerovich (a talk about programming
language that involves an actual study, with data, of how people
choose programming languages! How can it be!)</li>
<li>I have hard nothing but rave reviews of
<a href="https://www.youtube.com/watch?v=uEBzS9tpmTo">Practical Fractals in Space</a>
by Michelle Brush</li>
<li><a href="https://www.youtube.com/watch?v=4i7KrG1Afbk">Idris: Practical Dependent Types with Practical Examples</a>
by Brian McKenna was described to me as &ldquo;types from space&rdquo;. I&rsquo;m not a
huge type theory nerd, but this sounded like a fun talk to watch.</li>
<li><a href="https://www.youtube.com/watch?v=0CKru5d4GPk">Spreadsheets for developers</a> by Felienne Hermans is by someone who has
a <strong>PhD in spreadsheets</strong>. How cool is that? I have every regret
about not watching this talk.</li>
<li><a href="https://www.youtube.com/watch?v=JjYAnBhF2JU">Towards &ldquo;annex&rdquo;, a Fact Based Dependency System</a> by Mark Hibberd</li>
<li><a href="https://www.youtube.com/watch?v=N5HyVUPuU0E">Simulation Testing</a> by
Michael Nygard</li>
</ul>

<h3 id="inclusive-yay">inclusive yay</h3>

<p>Strange Loop tried really hard to be more inclusive this year. Bridget
Hillyer wrote a great
<a href="http://bridgetconsulting.com/?p=131">wrap up post</a>. The most striking
thing to me was this:</p>

<blockquote>
<p>[We engaged Ashe Dryden to help us come up with a plan]. I took that
plan and made a list of the steps included. I assumed Alex Miller
and I would prioritize them and decide what we could actually pull
off. Alex said we should do <em>all</em> of them. There were 58 items on
that list. Plus, Alex did many things beyond what was on that list
to make the conference more accessible and comfortable for all
involved.</p>
</blockquote>

<p>I love the idea of taking a huge list of ideas to make a conference
more inclusive and just doing every single one. There were tons of
women at the conference, and a lot of my favorite talks were by women.</p>

<p>I&rsquo;ve become pretty used to spaces with lots of women developers in
them after Hacker School, so I didn&rsquo;t find the number of women
super surprising (of <strong>course</strong> there are tons of awesome women who write
code! that&rsquo;s how it <em>always is</em>). 12% doesn&rsquo;t even feel like a lot to
me! But it was pretty great, and I got to meet a bunch of old and new
friends.</p>

<h3 id="types">types</h3>

<p>One small thing that I saw at Strange Loop that I <em>didn&rsquo;t</em> like was a
couple of talks making the following argument:</p>

<ul>
<li>languages with static type systems prevent a class of errors that
dynamic type systems don&rsquo;t</li>
<li>therefore those languages are safer</li>
<li>therefore if you&rsquo;re writing mission critical systems, you should use
static typing</li>
</ul>

<p>This class of argument really bothers me, because it doesn&rsquo;t really
hold up in court by itself. I <em>love</em> using static type checking, and I
would love to see evidence that statically typed programs actually
have less bugs.</p>

<p>But this argument by itself isn&rsquo;t that great. Strange Loop is a
conference where we have a really unique combination of academics and
developers with lots of industry experience. We could talk about this
in a more nuanced way!</p>

<ul>
<li>are there studies with evidence that static type checking reduces
the number of bugs?</li>
<li>what about the claim that dynamic languages are faster to develop
in? Do we have any evidence for that?</li>
</ul>

<p>Or I&rsquo;d love to see some analysis of case studies about organization
that have made a big switch (like Twitter&rsquo;s switch to Scala, for
instance), by someone without an agenda to push (like &ldquo;wow Scala is
great!&ldquo;).</p>

<p>It basically seemed like there were talks by people who really liked
static languages, and talks by people who really liked dynamic
languages, and they were just talking past each other. I didn&rsquo;t learn
anything new from these talks.</p>

<p>I&rsquo;d like to go back next year and see better arguments. See you next
year, Strange Loop! &lt;3</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[!!Con talks are up]]></title>
    <link href="https://jvns.ca/blog/2014/06/22/con-talks-are-up/"/>
    <updated>2014-06-22T12:50:32+00:00</updated>
    <id>https://jvns.ca/blog/2014/06/22/con-talks-are-up/</id>
    <content type="html"><![CDATA[<p>The talk recordings and transcripts for the amazing talks at !!Con
have been posted! Go learn about EEG machines, how to stay in love
with programming, type theory, dancing robots, hacking poetry, and more!</p>

<p><a href="http://bangbangcon.com/recordings.html">Here they are</a>!!</p>

<p><a href="http://ertyseidel.com/">Erty Seidel</a> did pretty much 100% of the work
for the talk recordings. Super pleased with the results.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Should my conference do anonymous review?]]></title>
    <link href="https://jvns.ca/blog/2014/06/06/should-my-conference-do-anonymous-review/"/>
    <updated>2014-06-06T22:04:25+00:00</updated>
    <id>https://jvns.ca/blog/2014/06/06/should-my-conference-do-anonymous-review/</id>
    <content type="html"><![CDATA[<p>I recently wrote an post called
<a href="http://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/">Anonymous review is amazing</a>,
talking about our experience with anonymous review at
<a href="http://bangbangcon.com/">!!Con</a> (it was excellent! I was surprised
and delighted!). There was a discussion on the PyCon organizers list
today about whether PyCon should do anonymous review, and I started
thinking about this a little more carefully.</p>

<p>I&rsquo;m going to make a few assumptions up front: our goal as conference
organizers is to have</p>

<ul>
<li>a process that is as unbiased as possible</li>
<li>speakers who will be engaging</li>
<li>who come from diverse backgrounds</li>
<li>where some are new speakers, and some are more experienced</li>
</ul>

<p>Let&rsquo;s talk about whether anonymous review will help us with these things!</p>

<p></p>

<h2 id="is-anonymous-review-less-biased">Is anonymous review less biased?</h2>

<p><strong>Yes.</strong></p>

<p>Firstly, people <em>believe</em> that anonymous review is less biased.</p>

<p>One of our !!Con&rsquo;s speakers,
<a href="https://twitter.com/hypotext">Katherine Ye</a>, told us:</p>

<blockquote>
<p>Thank you so much for [anonymizing everything]! It’s a relief to
know that I wasn’t picked for gender, race, age, or anything like
that.</p>
</blockquote>

<p><a href="https://twitter.com/hoxworth">Kenneth Hoxworth</a> said of RailsConf&rsquo;s
anonymous review process:</p>

<blockquote>
<p>It gave me courage that I wasn&rsquo;t going up against big names.</p>
</blockquote>

<p>It&rsquo;s really important for people to have confidence in a conference&rsquo;s
review process. Nobody wants to put time into a proposal if they&rsquo;re
going to be dismissed because of their gender or age or race, or just
because they&rsquo;re not famous enough. People also worry about not being
accepted on their own merit.</p>

<p>Anonymous review helps us build confidence, and that&rsquo;s really
valuable.</p>

<p>Anonymous review is also <strong>actually</strong> less biased.
<a href="http://www.cs.utexas.edu/users/mckinley/notes/blind.html">This study by Kathryn McKinley</a>
shows that, in peer-reviewed scientific articles, both men and women
express systemic bias against women, and double-blind reviewing
removed that bias. (thanks to
<a href="https://twitter.com/lindsey">Lindsey Kuper</a> for the link!)</p>

<blockquote>
<p>They found nepotism and gender bias were signiﬁcant factors in the
evaluation process. To be judged as good as their male counter
parts, female applicants had to be 2.5 times more productive.</p>
</blockquote>

<h2 id="will-anonymous-review-help-my-conference-s-diversity">Will anonymous review help my conference&rsquo;s diversity?</h2>

<p><strong>Maybe.</strong> <a href="https://ep2014.europython.eu">EuroPython</a> has an anonymous
  review process, and recently very few of their announced speakers
  were women. This is because very few women applied to give talks.
  You can&rsquo;t accept talks that don&rsquo;t exist!</p>

<p>A more effective way to diversify your speaker pool is through active
outreach. I don&rsquo;t know of any evidence to show that anonymous review
helps you attract a more diverse range of speakers. (is there some? I
would love to know.)</p>

<h2 id="will-anonymous-review-help-me-get-inexperienced-speakers">Will anonymous review help me get inexperienced speakers?</h2>

<p><strong>Maybe</strong>.</p>

<p>On one hand, we have</p>

<blockquote>
<p>It gave me courage that I wasn&rsquo;t going up against big names.</p>
</blockquote>

<p>On the other hand, <a href="http://twitter.com/dougnap">Douglas Napoleone</a>
pointed out:</p>

<blockquote>
<p>An anonymous system has an inherent bias towards very well written
 proposals. Those people whom have given the most talks are those
 whom are best at writing proposals which are best at getting
 through selection committees. It becomes a feedback loop which cuts
 out the very speakers we want most. Knowing that a person is a new
 speaker with a decent proposal is key when comparing them against a
 proposal by someone whom has given a talk at the last 8 python
 conferences.</p>
</blockquote>

<p>PyCon&rsquo;s approach is to actively encourage new speakers to apply and
work with them to write better proposals, and that&rsquo;s been successful.</p>

<p><a href="https://github.com/skade">Florian Gilchner</a> wrote about eurucamp&rsquo;s
experience with anonymous review
<a href="https://gist.github.com/jvns/cf74079ecdded0dad502#comment-1240653">here</a>:</p>

<blockquote>
<p>We found that newcomers don&rsquo;t write worse proposals than seasoned
speakers. Quite the contrary, we found that many proposals that are
submitted to many conferences are unspecific and dull and would only
fly by having a big name attached. Anonymous CFPs are very good at
weeding out copy-pasta. We didn&rsquo;t accept quite a few people that
would have been really shiny on the program.</p>
</blockquote>

<p>and</p>

<blockquote>
<p>Every year, we have at least one person we take huge bets on and get
very good talks out of that. Most of the time, it&rsquo;s someone would
[would lose out] in a direct and open battle.</p>
</blockquote>

<h2 id="but-will-my-speakers-be-good">But will my speakers be good?!</h2>

<p>This is probably the scariest part. We did anonymous review for !!Con,
and
<a href="http://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/">our speakers were very good</a>.
Our main hope was that if somebody wrote a proposal about an
interesting topic, then they could give an engaging 10-minute talk.
This worked. It&rsquo;s relevant here that our talks were all lightning
talks.</p>

<p>We also had an anonymizer, who did an amazing job reviewing videos and
telling us his impressions. This meant that we had to trust his
judgement (which I do! and our speakers were great!), but having only
one person watching talks introduces bias.</p>

<p>I&rsquo;d be worried about doing anonymous review if I was organizing a
conference where the talks were longer. (though it&rsquo;s been done
successfully!)</p>

<h2 id="so-should-you-do-anonymous-review">So should you do anonymous review?</h2>

<p>Anonymous review takes extra time. You should think about what
benefits you hope that it&rsquo;ll bring, and what your alternatives are.
There&rsquo;s some excellent discussion on the comments to
<a href="https://gist.github.com/jvns/cf74079ecdded0dad502">a draft of this post</a>.
Go read the whole thing.</p>

<p>Some other things you can spend time on:</p>

<ul>
<li>doing outreach to get more applications from under-represented
communities</li>
<li>giving new speakers feedback on their proposals and helping them do
a better job</li>
<li>writing up a really good call for speakers (see
<a href="http://2014.jsconf.eu/call-for-speakers/">JSConf EU&rsquo;s!</a>)</li>
<li>running brainstorming sessions to help people come up with ideas</li>
</ul>

<p>I would do it again for !!Con, since the response to it was super
positive and the talks were good. I find the bias-reduction argument
pretty compelling. Nepotism and accepting your friends&rsquo; talks are
really hard to fight against. Judging speaker quality still worries
me!</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anonymous talk review is amazing.]]></title>
    <link href="https://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/"/>
    <updated>2014-05-28T21:17:33+00:00</updated>
    <id>https://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/</id>
    <content type="html"><![CDATA[<p>Coming down from <a href="http://bangbangcon">!!Con</a>, there are a lot of
things I want to talk about. One of the things that surprised and
delighted me the most was how well anonymous talk review worked. I
would like to tell you about this and how we structured our talk
review generally.</p>

<p>We decided to review all the talks anonymously, to try to reduce our
bias. This was a <em>ton</em> of work.
<a href="http://www.nullspace.io/">Alex Clemmer</a> personally anonymized all the
talk proposals and then sat out of the review process because he knew
the identities of the proposers. He did an amazing job (including
watching attached videos and summarizing them for the reviewers!).</p>

<p>I was honestly a bit scared by this &ndash; how were we going to make sure
people were good at public speaking if we didn&rsquo;t even know who they
<em>were</em>?! But it turned out my fears were totally unfounded. We ended
up with</p>

<ul>
<li>a diverse range of talks (about art! compilers! type theory! assembly! games!)</li>
<li>by a good mix of experienced and new speakers</li>
<li>which were very well presented. The quality was even higher than I
expected, and I&rsquo;d worked on reviewing the proposals!</li>
</ul>

<p></p>

<p>Several people told us that they liked the anonymous review because
they were confident they&rsquo;d be judged fairly on the merits of their
proposal.</p>

<p>One of our accepted speakers,
<a href="https://twitter.com/hypotext">Katherine Ye</a>, told us:</p>

<blockquote>
<p>Thank you so much for [anonymizing everything]! It&rsquo;s a relief to
know that I wasn&rsquo;t picked for gender, race, age, or anything like
that.</p>
</blockquote>

<p>I would happily do anonymous review again. It was great.</p>

<h3 id="outreach-to-women">Outreach to women.</h3>

<p>This is going to be a whole separate post, since we worked really hard
on this. Basically: about 30-40% of our talk submissions were from
women, and 40% of the talks we accepted were by women. We didn&rsquo;t
measure other axes of diversity (like race/class/other things).
There&rsquo;s a lot of room for improvement.</p>

<h3 id="168-proposals">168 proposals!!!</h3>

<p>We were blown away by how many people submitted talks. And we only had
space for 24 talks! We had to make super hard decisions, and we didn&rsquo;t
have much time.</p>

<h3 id="talk-review-letter-grades">Talk review: Letter grades</h3>

<p><a href="https://twitter.com/lindsey">Lindsey</a> suggested
<a href="http://scg.unibe.ch/download/champion/#PATTERN5">this way of managing review</a>
after having seen it at academic conferences. Each of us assigned a
proposal a letter grade (A-D), from &ldquo;I will fight for this talk&rdquo;, to
&ldquo;I will fight for this talk to be <em>rejected</em>&rdquo;. We then looked at the
highest &amp; lowest grade for each talk and binned them into AA, AB, AC,
AD, BB, BC, BD, CC, CD, DD. We rejected any talk that didn&rsquo;t have an
A.</p>

<p>If I knew who a proposal was by, I abstained from reviewing it (so
hard!).</p>

<p>This left us with maybe 80 talks that at least one person thought was
excellent-sounding. Still too many!</p>

<h3 id="github-issues-for-discussion">GitHub issues for discussion</h3>

<p>We then used GitHub to discuss talk proposals. We put each talk into
an GitHub issue, and tagged them. Here are the tags we used.</p>

<ul>
<li><code>AA</code> - <code>AD</code> Letter grade ranking</li>
<li><code>accept</code> - Accepted</li>
<li><code>reject</code> - Rejected</li>
<li><code>has-advocate</code> - Someone has advocated this talk in the comments</li>
<li><code>reject-advocate</code> - Someone has argued for rejecting this talk in
the comments</li>
<li>a category: (work/fun/science/product/art/proglang/other)</li>
</ul>

<p>To be accepted, a talk needed an <em>advocate</em> &ndash; someone who would argue
for it to be accepted. Once it had an advocate, we would discuss its
merits in a video chat and decide whether to accept or reject it.</p>

<p>We did that, and after much sadness (what do you mean this is still
too many talks! We can&rsquo;t accept three talks about the Curry-Howard
isomorphism!), we had a program!.</p>

<h3 id="super-personal-responses">Super-personal responses</h3>

<p>Alex, our Chief Anonymizer, did not only do an amazing job of
anonymizing! Not at all. We got a ton of submissions that we would
have <em>loved</em> to accept if we&rsquo;d had more space.</p>

<p>So Alex sent personal emails to people whose talks we rejected saying
how interesting he thought their talks were and which parts
specifically he liked.</p>

<p>If your talk got rejected, you should consider submitting it to
another conference! We probably loved it.</p>

<h3 id="amazing-results">Amazing results</h3>

<p>My favorite things about anonymous talk review were</p>

<ul>
<li>it gave the speakers more confidence that they&rsquo;d be judged fairly</li>
<li>it was impossible to accept less-interesting-sounding talks just
because they were &ldquo;by someone famous&rdquo;. There were amazing talks by
people who had never spoken at a conference before.</li>
<li>it was impossible to give preferential treatment to our friends!
This was a bit sad (some of my friends submitted talks that I knew
were great, and were rejected, and I couldn&rsquo;t do anything), but it
made the conference better.</li>
</ul>

<p>Here&rsquo;s the <a href="http://bangbangcon.com/program.html">final program</a>. There
was weaving! Assembly! How serial protocols work! Logic programming!
Hacking poetry! Robots dancing! Python&rsquo;s 1500-line switch statement!
All of the speakers did an amazing job &ndash; I think for every single
talk I heard someone say &ldquo;Wow, that was my favorite talk!&rdquo;</p>

<p>None of this is to say that anonymous review is the best way to do
talk review. PyCon does not do anonymous review at all, and I think
they do a great job. But it worked very well for us.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[♥ PyCon]]></title>
    <link href="https://jvns.ca/blog/2014/04/13/pycon/"/>
    <updated>2014-04-13T21:37:45+00:00</updated>
    <id>https://jvns.ca/blog/2014/04/13/pycon/</id>
    <content type="html"><![CDATA[<p>PyCon 2014 happened! It was my first time at PyCon, I expected to have
a good time, and it was better than I expected. I spoke! People came
up to me and said they enjoyed my talk! There were so many amazing
talks! I met so many people whose work I&rsquo;d been following! <sup>1</sup>&frasl;<sub>3</sub> of the
talks were by women! It was <em>wonderful</em>.</p>

<p>A few talks that especially stood out to me, or that I missed and
<em>really</em> want to see. I didn&rsquo;t see anything like all the talks, but I
liked these. In no particular order:</p>

<p></p>

<p><small>
Not all of the videos are up yet, but I&rsquo;ll come back to this later and
put in video links when they are.
</small></p>

<ul>
<li><a href="https://twitter.com/ctitusbrown">Titus Brown</a> gave a wonderful talk
about his work in computationally intensive biology. I found this
particularly interesting because he offered roughly &ldquo;I have harder
data problems that your tech job does! Come do a PhD with me and
I&rsquo;ll pay you a fraction as much.&rdquo; This was oddly compelling. Very
much worth watching.
<a href="http://ivory.idyll.org/blog/2014-pycon.html">Notes from his talk</a>,
<a href="http://pyvideo.org/video/2697/data-intensive-biology-in-the-cloud-instrumentin">[Video]</a></li>
<li><a href="https://twitter.com/juliepagano">Julie Pagano</a> gave
<a href="https://us.pycon.org/2014/schedule/presentation/164/">advice about battling imposter syndrome</a>.
I liked that her advice was practical! We need better advice than
&ldquo;you shouldn&rsquo;t have imposter syndrome!&rdquo;, and this did well at that.
<a href="http://pyvideo.org/video/2659/its-dangerous-to-go-alone-battling-the-invisibl">[Video]</a></li>
<li><a href="https://twitter.com/jessicamckellar">Jessica McKellar</a>&rsquo;s keynote on how we can help advance computer
science education was amazing. It was amazing because she gave so
many concrete suggestions and specific calls to action: there were
easy things (for example: call your legislators and tell them CS
should count for AP math/science credit!) and larger commitments.
She challenged everyone to do just one thing in the upcoming year to
try to make CS education in high school better.
<a href="http://pyvideo.org/video/2684/keynote-jessica-mckellar">[Video]</a></li>
<li><a href="https://twitter.com/fperez_org">Fernando Perez</a> spoke about the
state of Python for scientific and how scientists are using IPython
to easily make their work reproducible. I&rsquo;m so impressed with the
community he&rsquo;s building around this software. The tools are so good
and getting better so quickly.
<a href="http://pyvideo.org/video/2683/keynote-fernando-perez">[Video]</a></li>
<li><a href="https://twitter.com/NaomiCeder">Naomi Ceder</a> spoke about
<a href="https://us.pycon.org/2014/schedule/presentation/182/">being a trans woman in the Python community</a>.
I saw so many positive comments about her talk on Twitter
afterwards. I&rsquo;m really interested to see what she has to say, and
delighted that I work in a community where her perspective is
valued.
<a href="http://pyvideo.org/video/2671/farewell-and-welcome-home-python-in-two-genders">[Video]</a></li>
<li><a href="https://twitter.com/paultag">Paul Tagliamonte</a>&rsquo;s talk about
<a href="https://us.pycon.org/2014/schedule/presentation/192/">compiling Lisp to Python bytecode</a>
was the kind of excited &ldquo;let&rsquo;s see how far we can take this crazy
idea!&rdquo; talk that I really enjoy. Super enjoyable speaker.
<a href="http://pyvideo.org/video/2616/getting-hy-on-python-how-to-implement-a-lisp-fro">[Video]</a></li>
<li><a href="https://twitter.com/hsjuju2">Julie Lavoie</a> talked about
<a href="https://us.pycon.org/2014/schedule/presentation/179/">Analyzing Rap Lyrics with Python</a>.
I liked this because she clearly loves rap, and she gave some
background on rap as an art form, including samples from different
styles. Also it was a super fun introduction to natural language
processing.
<a href="http://pyvideo.org/video/2658/analyzing-rap-lyrics-with-python">[Video]</a></li>
<li><a href="https://twitter.com/tavarm">Tavish Armstrong</a> talked about one of
his favorite topics: how programmers can learn from software
engineering research. His call to action: Try to measure something
about your software engineering practice! Show it to your friends!
Reproduce it! Give a talk at PyCon next year about it!
<a href="http://pyvideo.org/video/2696/software-engineering-research-for-hackers-bridgi">[Video]</a></li>
<li><a href="https://twitter.com/akaptur">Allison Kaptur</a> explained how
<a href="https://us.pycon.org/2014/schedule/presentation/229/">import works in Python, from the ground up</a>.
I loved that she started with a naive version of import and kept
incrementally improving it until we got to a version that resembles
how <code>import</code> actually works.
<a href="http://pyvideo.org/video/2567/import-ant-decisions">[Video]</a></li>
<li>I talked about why IPython Notebook and Pandas are my favorite tools
for exploratory data analysis, and people said they enjoyed how
enthusiastic I was afterwards. Yay!
<a href="http://pyvideo.org/video/2657/diving-into-open-data-with-ipython-notebook-pan-0">[Video]</a>,
<a href="http://bit.ly/pycon-pandas">[Slides]</a>, <a href="https://github.com/jvns/pandas-cookbook">[pandas cookbook]</a></li>
</ul>

<p>A few more talks that I want to watch the videos for, but can&rsquo;t
comment on because, well, I haven&rsquo;t yet.</p>

<ul>
<li><a href="http://pyvideo.org/video/2600/for-lack-of-a-better-nameserver-dns-explained">For Lack of a Better Name(server): DNS Explained</a>,
by Lynn Root</li>
<li><a href="http://pyvideo.org/video/2578/cache-me-if-you-can-memcached-caching-patterns">Cache me if you can: memcached, caching patterns and best practices</a>
by Guillaume Ardaud</li>
<li><a href="http://pyvideo.org/video/2568/kneel-and-disconnect-getting-the-fastest-connect">Kneel And Disconnect: Getting The Fastest Connection Out Of A Hostname</a>
by Ashwini Oruganti</li>
<li><a href="http://pyvideo.org/video/2622/an-introduction-to-twisted">An Introduction to Twisted</a> by Stacey Sern</li>
<li><a href="http://pyvideo.org/video/2694/the-python-pipeline-why-you-should-reach-out-to">The Python Pipeline: Why you should reach out to local teachers and how to do it</a> by Selena Deckelmann</li>
<li><a href="http://pyvideo.org/video/2606/realtime-predictive-analytics-using-scikit-learn">Realtime predictive analytics using scikit-learn &amp; RabbitMQ</a> by
Michael Becker</li>
<li><a href="http://pyvideo.org/video/2598/distributed-computing-is-hard-lets-go-shopping">Distributed Computing Is Hard, Lets Go Shopping</a> by Lewis Franklin</li>
<li><a href="http://pyvideo.org/video/2572/fan-in-and-fan-out-the-crucial-components-of-con">Fan-in and Fan-out: The crucial components of concurrency</a> by Brett
Slatkin</li>
<li><a href="http://pyvideo.org/video/2585/building-and-breaking-a-python-sandbox">Building and breaking a Python sandbox</a> by Jessica McKellar (I saw a
version of this at Hacker School and it was amazing)</li>
<li><a href="http://pyvideo.org/video/2695/python-in-the-browser-intro-to-brython">Python in the Browser: Intro to Brython</a> by Susan Tan</li>
<li><a href="http://pyvideo.org/video/2633/garbage-collection-in-python">Garbage Collection in Python</a> by Benjamin Peterson</li>
<li><a href="http://pyvideo.org/video/2640/subprocess-to-ffi-memory-performance-and-why-y">Subprocess to FFI: Memory, Performance, and Why You Shouldn&rsquo;t Shell Out</a> by Christine Spang</li>
</ul>

<p>I never stop being impressed with people I meet at PyCon. Conferences
are so hard! I want to meet all the people and do all the things and
be in 3 places at things. And the sprints haven&rsquo;t even happened yet!</p>

<p>I&rsquo;m so thankful to all the organizers for doing so much work to make
this possible. The conference chair
<a href="https://twitter.com/diana_clarke">Diana Clarke</a> got a standing
ovation at the closing session, and more than deserved it.</p>

<p>♥ PyCon.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CUSEC = fun]]></title>
    <link href="https://jvns.ca/blog/2014/01/22/cusec-equals-fun/"/>
    <updated>2014-01-22T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2014/01/22/cusec-equals-fun/</id>
    <content type="html"><![CDATA[<p>Last week I attended <a href="http://2014.cusec.net/">CUSEC</a>, an undergrad
conference for software engineers. They invited me to speak which was
super exciting, and there were a lot of great talks. I also got to
meet <a href="https://twitter.com/kelseyinnis">Kelsey Gilmore-Innis</a> and it
was pretty great.</p>

<p>Some of my favorite things:
</p>

<ul>
<li><a href="http://www.joshmatthews.net/">Josh Matthews</a> gave a great
introductory talk on how to contribute to Firefox. I liked how he
gave some concrete examples of small patches. He also showed off
<a href="http://whatcanidoformozilla.org/">http://whatcanidoformozilla.org/</a>,
which I hadn&rsquo;t heard of before. You can see the
<a href="http://www.joshmatthews.net/cusec14/">slides</a> on his website, and
they have tons of detail. He really made the Mozilla community sound
friendly and welcoming and it was great.</li>
<li><a href="https://twitter.com/kelseyinnis">Kelsey Gilmore-Innis</a> talked about
how functional programming isn&rsquo;t scary and the reasons she liked it.
I liked how she pushed back against the notion that functional
programs are unreadable &ndash; she pointed out that people who write
imperative programs spend a lot of time learning how to read for
loops, and learning how to read <code>map</code> is similar. Food for thought
for sure.</li>
<li><a href="https://twitter.com/avibryant">Avi Bryant</a> gave an
easy-to-understand-for-me introduction to HyperLogLog and talked
about how we can often write better programs if we write them
probabilistically. Fun!</li>
</ul>

<p><a href="http://twitter.com/notwaldorf">Monica</a>,
<a href="https://twitter.com/kelseyinnis">Kelsey</a>, and a few other people put
together something we called CUSECLadies. Basically we invited all the
women students at CUSEC to meet up with us (women with programming
jobs and a few years&rsquo; experience on them) and had a big group
discussion. We talked about salary negotiation, whether or not women
stay in tech, how we all got into programming, people&rsquo;s experiences in
school, whether we identify as feminists, advice for talking to
companies at job fairs, the role of women-only groups, and a whole
bunch of other things.</p>

<p>It was totally unplanned, but I think/hope people got something out of
it.</p>

<p>I also gave a talk! It was called &ldquo;You can be a kernel hacker!&rdquo; and it
was 100% the most fun talk I have given so far. Here are
<a href="http://bit.ly/kernelfun">links to the resources</a> I talked about.</p>

<p>A whole bunch of delightful people came up to me after and told me
that they now feel like they know what a kernel is and how to get
started with kernel programming! What a world =D</p>

<p>My favorite new talk tactic (thanks to
<a href="http://twitter.com/notwaldorf">Monica</a>) is to gray out everything
irrelevant when showing code samples. Here&rsquo;s an example:</p>

<p>Before:</p>

<p><img src="/images/chmod-code.png"></p>

<p>After:</p>

<p><img src="/images/chmod-code-crossed-out.png"></p>

<p>I found that this really helped with the cognitive load of code
samples and made showing kernel code much less intimidating. The
technical term for this is &ldquo;eraser eyes&rdquo;.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You should give talks. They will be awesome. Here&#39;s why!]]></title>
    <link href="https://jvns.ca/blog/2014/01/12/public-speaking/"/>
    <updated>2014-01-12T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2014/01/12/public-speaking/</id>
    <content type="html"><![CDATA[<p>I&rsquo;m working on preparing a talk for <a href="http://2014.cusec.net/">CUSEC</a>,
and I wanted to write down a few things on what I think about when I
submit and prepare talks.</p>

<p>I&rsquo;m pretty new to all of this, but in 2013 I gave talks at PyCon
Canada and PyData NYC, as well as local user group meetups like
Montreal Python. And a bunch of short presentations at Hacker School.
I&rsquo;m a lot less scared of it than I used to be! It turns out it&rsquo;s kind
of fun!</p>

<p>The first order of business when preparing a talk is to convince
yourself that public speaking is a good idea and better than hiding
under the bed.
</p>

<p>One blog post that really motivated me when I was starting out was
this post by Hilary Mason on
<a href="http://www.hilarymason.com/speaking/why-you-an-introverted-nerd-should-try-public-speaking/">why introverts should do public speaking</a>.
She argues that if you&rsquo;re an introvert, public speaking is an
<em>excellent</em> idea because introducing yourself is a lot of work. If you
give a talk, you only have to introduce yourself to everyone once.</p>

<p>So far I&rsquo;ve found that giving talks improves my experience of a
conference a lot. It makes it easier to start conversations! People
will come up to me afterwards and we&rsquo;ll have a natural thing to talk
about. Also I get a speaker badge which is fun, and sometimes you get
in for free.</p>

<p>Another post I find useful when motivating myself is this one by Jen
Dzuira on how
<a href="http://www.thegloss.com/2013/07/24/career/bullish-life-inspiring-mediocrity-career/">mediocrity is inspiring</a>.
I often worry that my talks won&rsquo;t be as well-put-together and
inspiring as the best talks I&rsquo;ve ever seen. And they probably won&rsquo;t
be!</p>

<p>So I instead try to think about all the talks I&rsquo;ve seen that I found
boring, or that went over time, or that were badly organized, and
remember that I can definitely do better :). And that I have given
talks before and people have said nice things to me! Nobody has
ever said anything mean, which I take to mean that I am amazing and
can do no wrong.</p>

<p>Once I&rsquo;ve convinced myself that public speaking is a good idea and
that I can do a decent job of it, preparing talks is still hard! I
really really really really like this post
<a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful">&ldquo;Presentation Skills Considered Harmful&rdquo;</a>
from the Serious Pony blog.</p>

<p>You should really just go read it, but she basically points out that
people don&rsquo;t care about you, they care about themselves. So it doesn&rsquo;t
matter if you&rsquo;re a &ldquo;good speaker&rdquo; and have awesome slides and socks
that match and perfect diction. All that matters is that you get
across information that makes the people you&rsquo;re talking to more
awesome.</p>

<p>Things like awesome slides and perfect diction sometimes help you
convey information better, but not necessarily! They might get in the
way!</p>

<p>This is also a great way to think about conference proposals. I try to
explain not &ldquo;why is this a good talk?&rdquo;, but &ldquo;if you come to this talk,
how will it make you better?&rdquo;</p>

<p>That is all! I think you should go read those blog posts and adjust
your beliefs as follows:</p>

<ul>
<li>You should give talks!</li>
<li>Lots of people have given kinda crappy talks. Yours can be better!</li>
<li>If you give people something they can use, everybody will love you!</li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Videos from PyData NYC are up!]]></title>
    <link href="https://jvns.ca/blog/2013/11/30/videos-from-pydata-nyc-are-up/"/>
    <updated>2013-11-30T00:00:00+00:00</updated>
    <id>https://jvns.ca/blog/2013/11/30/videos-from-pydata-nyc-are-up/</id>
    <content type="html"><![CDATA[<p>The <a href="http://vimeo.com/pydata/videos">videos from PyData NYC</a> are now
up. In particular, you can now watch the
<a href="http://vimeo.com/79835526">video for my IPython Notebook + pandas tutorial</a>.
I&rsquo;m not sure how well it translates to video, since it was a pretty
interactive tutorial and I spent a lot of the time running around in
the audience answering questions. The
<a href="http://nbviewer.ipython.org/github/jvns/talks/blob/master/pydatanyc2013/PyData%20NYC%202013%20tutorial.ipynb">IPython Notebook</a>
and the
<a href="http://bit.ly/pydata-pandas-tutorial">same notebook on Wakari</a> should
be useful, though.</p>

<p>Some talks I enjoyed at PyData NYC:</p>

<p><strong><a href="http://vimeo.com/79500848">Probabilistic Data Structures for Realtime Analytics</a></strong>
  by <a href="https://github.com/mlaprise">Martin Laprise</a></p>

<p>I didn&rsquo;t know too much about probabilistic data structures before this
talk. He explained how Bloom filters work and when it would be
appropriate to use them, and now I know! There&rsquo;s also an
<a href="http://nbviewer.ipython.org/github/mlaprise/pydata2013-pds-talk/blob/master/pydata2013.ipynb">IPython Notebook</a>.</p>

<p>My main takeaway from this talk was that you can use Bloom filters to
describe a huge amount of data, but not an <em>unlimited</em> amount of data
&ndash; the size of your Bloom filter depends on how much data you&rsquo;re going
to put into it. He also described how to set up a Bloom filter where
the elements expire after a certain amount of time.</p>

<p><strong><a href="http://vimeo.com/79832657">IPython - The Attributes of Software and How They Affect Our Work</a></strong>
  by <a href="https://github.com/ellisonbg">Brian Granger</a></p>

<p>I wasn&rsquo;t able to make it to this talk, but everyone was abuzz about
it on Twitter afterwards, so I&rsquo;m definitely going to watch the video.</p>

<p><strong><a href="http://vimeo.com/79531980">Python at Datadog - Building High-Volume Data Systems in the Python Ecosystem</a></strong></p>

<p>At 25:27, he demos how Cython has a tool to automatically colour your
Cython code and show how optimized it is. Whoa. That is the kind of
stuff I go to conferences to learn :)</p>

<p>I didn&rsquo;t make it to very many talks at the conference, so I&rsquo;d love to
hear about what else I missed.</p>
]]></content>
  </entry>
  
</feed>