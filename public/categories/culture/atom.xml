<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Julia Evans]]></title>
  <link href="http://jvns.ca/atom.xml" rel="self"/>
  <link href="https://jvns.ca/categories/culture/atom/index.xml"/>
  <updated>0001-01-01T00:00:00+00:00</updated>
  <id>http://jvns.ca</id>
  <author>
    <name><![CDATA[Julia Evans]]></name>
  </author>
  <generator uri="http://gohugo.io/">Hugo</generator>

  
  <entry>
    <title type="html"><![CDATA[Surviving meetings while remote]]></title>
    <link href="https://jvns.ca/blog/2015/12/31/surviving-meetings-while-remote/"/>
    <updated>2015-12-31T07:05:40+00:00</updated>
    <id>https://jvns.ca/blog/2015/12/31/surviving-meetings-while-remote/</id>
    <content type="html"><![CDATA[

<p>I work remote. This means that in most of the meetings I&rsquo;m in, I&rsquo;m a remote participant. If you&rsquo;re in an organization that has a lot of remotes, maybe this will be useful to you! There are two scenarios I want to talk about:</p>

<ol>
<li>Every person in the meeting is in a different location (100% remote)</li>
<li>There are 6 people in the meeting (5 local, 1 remote)</li>
</ol>

<p>Scenario #1 is great! Everyone has the same connection problems.</p>

<p>Scenario #2 is a disaster. It took me a long time to understand why, but I think the primary reason is that it&rsquo;s very hard to interrupt and indicate that I want to speak when I&rsquo;m remote. You can&rsquo;t indicate it visually as easily, so if I just wait for a break in the conversation to say something&hellip; well, it will never happen :)</p>

<p>Also, sometimes people can&rsquo;t hear me, and I&rsquo;ve had this exchange a lot</p>

<ul>
<li>other people: stuff</li>
<li>me: minor remark</li>
<li>other people: what? we didn&rsquo;t catch that</li>
<li>me: never mind.</li>
</ul>

<p>I&rsquo;ve gotten way better at being remote in meetings and interrupting. Now if I have something to say I just say &ldquo;HI I HAVE A THING TO SAY&rdquo;. And people say &ldquo;yes julia?&rdquo; and then I say the thing. It feels awkward but it works for me. But it took me a really long time to learn how to interrupt! Recently I was in a meeting with 8 local people and me and I said more than 5 things! I am now a remote meetings wizard.</p>

<p>It&rsquo;s also hard to tell when a remote person is <em>done</em> speaking. I sometimes explicitly say &ldquo;that&rsquo;s all I have&rdquo; or something at the end. So my interactions are awkwardly delimited by HI I HAVE A THING TO SAY &ndash; I AM SAYING THE THING - I AM DONE SPEAKING NOW YOU MAY PROCEED. This is great and it works.</p>

<h3 id="local-people-can-help">local people can help</h3>

<p>I once ran a meeting with 6 remotes and 6 local people, where I was local. Normally, this means that the local people do all the talking and the remotes are totally silent (because the barrier to entry is high). To combat this a little, I frequently asked the remotes if they had anything to say (Dan, I know you care a lot about this. What do you think?), and they frequently did have something really interesting to say! They were just not saying it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An argument for hiring junior developers]]></title>
    <link href="https://jvns.ca/blog/2015/07/25/an-argument-for-hiring-junior-developers/"/>
    <updated>2015-07-25T10:29:06+00:00</updated>
    <id>https://jvns.ca/blog/2015/07/25/an-argument-for-hiring-junior-developers/</id>
    <content type="html"><![CDATA[<p>An argument for hiring junior developers, from a conversation I had with @kamalmarhubi and @zmagg. There&rsquo;s an interesting <a href="https://twitter.com/b0rk/status/621922353757470720">follow-up discussion on Twitter</a>. In particular, hiring less experienced people is a long-term investment.</p>

<p><a href="/images/junior-developers.jpg"> <img src="/images/junior-developers.jpg"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Senior engineering &amp; fantasy heroes]]></title>
    <link href="https://jvns.ca/blog/2015/03/28/senior-engineering-and-fantasy-heroes/"/>
    <updated>2015-03-28T10:30:29+00:00</updated>
    <id>https://jvns.ca/blog/2015/03/28/senior-engineering-and-fantasy-heroes/</id>
    <content type="html"><![CDATA[

<p>I was talking to someone at work this past week about what I&rsquo;d want out
of a senior engineer, and found myself inventing characters I&rsquo;d like to
work with (and I already work with people who remind me of all of these,
of course! &lt;3). Maybe someone will find this bit of silliness enjoyable
:). It&rsquo;s about how fortune tellers do not necessarily also need to be
cattle wranglers.</p>

<p>(apparently I think gardeners are fantasy heroes)</p>

<p>In very related excellence, <a href="https://twitter.com/skamille">Camille Fournier</a> posted Rent the Runway&rsquo;s
engineering ladder in this <a href="http://dresscode.renttherunway.com/blog/ladder">blog post</a> and
<a href="https://docs.google.com/spreadsheets/d/1k4sO6pyCl_YYnf0PAXSBcX776rNcTjSOqDxZ5SDty-4/edit#gid=0">spreadsheet</a>
which lays out engineering qualities they value in terms of
strength/dexterity/wisdom/charisma &lt;3</p>

<h3 id="the-fortune-teller">The fortune teller</h3>

<p>The fortune teller can tell the future about your engineering project.
You tell her a design decision you&rsquo;re making; she tells you the problems
you&rsquo;re going to run into in 3 months. She saves you an incredible amount
of engineering effort in bad directions.</p>

<h3 id="the-cattle-wrangler">The cattle wrangler</h3>

<p>You have a team, and you need to standardize how your programs do an
Important Thing. Everyone wants to standardize, and nobody can agree on
what the standard should be. The cattle wrangler is amazing at working
through the pros and cons, and getting everyone to feel heard &amp; agree on
a standard.</p>

<h3 id="the-spring-of-knowledge">The spring of knowledge</h3>

<p>Your company uses a lot of Java, and sometimes you need to know some
obscure internal JVM detail. And all of your internet searching is
bringing up&hellip; nothing. When you do, you go to the spring of Java
knowledge, which tells you what you need to know.</p>

<p>(What you need to know is not always the answer to the question you
asked)</p>

<h3 id="the-gardener">The gardener</h3>

<p>You built a project full of technical debt and spiky bits? You go to the
gardener for help, and sheepishly ask them to help you clean it up a
bit. They show you where the nastiest weeds are, suggest code that you
could delete, and help you get to a better architecture in a reasonable
amount of time. They&rsquo;re great to have on your side at the beginning of a
project, before you create the technical debt in the first place :)</p>

<p>If you have more characters you work with &amp; love, tell me!
<a href="https://twitter.com/b0rk">@b0rk</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming doesn&#39;t belong to men (it belongs to me)]]></title>
    <link href="https://jvns.ca/blog/2014/12/28/programming-doesnt-belong-to-men-it-belongs-to-me/"/>
    <updated>2014-12-28T18:58:03+00:00</updated>
    <id>https://jvns.ca/blog/2014/12/28/programming-doesnt-belong-to-men-it-belongs-to-me/</id>
    <content type="html"><![CDATA[<p>One thing I&rsquo;ve noticed since I started writing this blog is that I&rsquo;ll
get comments like these on my posts: (all these people are talking about
me)</p>

<blockquote>
<p>He&rsquo;s only using the -Ofast gcc option, I wonder what he would get with
-march=native -mtune=native which allows the compiler to use more
instructions.</p>

<p>But more interestingly, why is he studying the amalgated C file
 instead of, you know, the sources?</p>

<p>I think he talks about the actual .db file?</p>

<p>How would each machine/core&rsquo;s counts know when they are done? If he
wants a max of a million counts wouldn&rsquo;t each machine have to check
the counts of each other machine before continuing?</p>

<p>If you change the OP&rsquo;s problem to summing a vector of floating point
numbers, then even the way he has coded it there will still be
differences from run to run.</p>

<p>One thing he doesn&rsquo;t mention is the fear of looking stupid.</p>
</blockquote>

<p>When this happens, when people implicitly assume that a Technical Thing
On The Internet must be written by a man, I find it confusing. I didn&rsquo;t
grow up with the idea that I was worse at math or programming than the
men around me (because, well, I wasn&rsquo;t!) And I didn&rsquo;t grow up with the
idea that it was weird for me to write programs (why would it be?). And
a huge number of the programmers I know and respect are women.</p>

<p>So the idea that programmers are all men or that programming is for men
or that an article about the Linux kernel is probably written by a man
just seems&hellip; silly to me. I feel like the community <em>belongs to me</em>,
and like I&rsquo;m a part of it.</p>

<p>And when people who have more power push marginalized people out of
tech, I think, who do you think you are? Why do you think this belongs
to you, and that you have the right to say who can come and who can&rsquo;t?</p>

<p>Programming doesn&rsquo;t belong to men, or to people who went to MIT, or to
white people, or to English-speakers, or to Linux users, or to C
programmers, or to people with CS degrees, or to people who are
self-taught, or to people who can see, or to people who had easy access
to computers when they were young. If you write programs, it belongs to
you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fear makes you a worse programmer]]></title>
    <link href="https://jvns.ca/blog/2014/12/21/fear-makes-you-a-worse-programmer/"/>
    <updated>2014-12-21T14:51:32+00:00</updated>
    <id>https://jvns.ca/blog/2014/12/21/fear-makes-you-a-worse-programmer/</id>
    <content type="html"><![CDATA[<p>Yesterday morning, I asked on Twitter:</p>

<blockquote>
<p>Does anyone have good writing about fear + programming (and how being
afraid to make important changes makes you a worse programmer?)</p>
</blockquote>

<p>and</p>

<blockquote>
<p>I feel like there&rsquo;s this really important line between caution (a++
excellent) and fear (which holds you back from doing necessary work)</p>
</blockquote>

<p>A lot of <a href="https://twitter.com/b0rk/status/546376386672611329">super interesting discussion ensued</a>, and I&rsquo;d
like to talk about some of it.</p>

<p>Before I start, <a href="https://twitter.com/rckenned">Ryan Kennedy</a> linked me
to this slide deck of a presentation he gave called
<a href="https://speakerdeck.com/ryankennedy/fear-driven-development">Fear Driven Development</a>
which I absolutely loved, and I think you should look at it. I think my
favorite sentence from that presentation is <strong>&ldquo;Fear creates local
maximums.&rdquo;</strong></p>

<p>I find that when I&rsquo;m afraid, I become super conservative. WE CANNOT
POSSIBLY MAKE THIS CHANGE WHAT IF IT BREAKS?! And this means worse
software! It&rsquo;s actually kind of disastrous. If you&rsquo;re scared of making
changes, you can&rsquo;t make something dramatically better, or do that big
code cleanup. Maybe you can&rsquo;t even deploy the code that you already
wrote and tested, because it feels too scary. You just want to stick
what&rsquo;s sort-of-working, even if it&rsquo;s not great.</p>

<p></p>

<h2 id="better-tools-process-less-fear">Better tools &amp; process =&gt; less fear</h2>

<p>A lot of people brought up tools and processes. (in particular the
fantastic <a href="https://twitter.com/kelseyinnis">Kelsey Gilmore-Innis</a>, who
has new-to-me things to say about better processes for testing code
every time I talk to her)</p>

<p>Kelsey:</p>

<blockquote>
<p>I know you&rsquo;re talking more psychologically, but this is one of my main
reasons I believe investing in tests early is important</p>

<p>[&hellip;] obsessive monitoring, CI, canary deploys, chatops, dogfooding,
selfserve infra</p>
</blockquote>

<p>So! Here are a few ways tools and processes can make us less afraid:</p>

<p><strong>Version control</strong> means that you can make changes to your code without
being scared of losing the old version. This one is so basic to me now
&ndash; I can&rsquo;t even imagine how afraid I would be if I were programming
without version control.</p>

<p>So many people mentioned <strong>testing</strong> as a way to build confidence. My
favorite thing I&rsquo;ve ever read about testing is this book <a href="http://www.amazon.ca/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052">Working
Effectively with Legacy
Code</a>,
where <a href="http://www.amazon.ca/gp/product/toc/0131177052/ref=dp_toc?ie=UTF8&amp;n=916520">every chapter
title</a>
is something that&rsquo;s scary or difficult about working with legacy code.
(He defines &ldquo;legacy code&rdquo; as &ldquo;code without tests&rdquo;, to give you a
flavor). For instance: &ldquo;I Don’t Understand the Code Well Enough To
Change It.&ldquo;, &ldquo;How Do I Know That I’m Not Breaking Anything?&rdquo;, &ldquo;I Don’t
Have Much Time and I Have To Change It.&rdquo;</p>

<p>This tweet from <a href="https://twitter.com/unclebobmartin/status/469536509822259200">Uncle Bob Martin</a>,
explains this idea pretty well:</p>

<blockquote>
<p>Even with good design, w/o tests you will fear change and so the code
will rot.  With good tests, there’s no fear, so you’ll clean the code.</p>
</blockquote>

<p>But testing and version control are not the only tools we have! We can
also build</p>

<ul>
<li>QA environments where breaking things is totally allowed and encouraged</li>
<li>deploys that go out a little bit at a time</li>
<li>the ability to roll back a deploy easily</li>
<li>QA teams, whose job it is to exhaustively test software</li>
<li>tools that will email you if your program throws exceptions</li>
</ul>

<p>and lots more.</p>

<h2 id="fear-of-retribution-and-blameless-postmortems">Fear of retribution (and blameless postmortems)</h2>

<p>But tools and processes are absolutely not the only thing. Even if I
have amazing tools and QA systems and the best deploy tools and
well-testing code, I&rsquo;m <strong>still going to make mistakes sometimes</strong>. And
what happens when I make a mistake is really critical.</p>

<p>Etsy and Google and Stripe (where I work) all have <a href="https://codeascraft.com/2012/05/22/blameless-postmortems/">blameless postmortems</a>.
This means that if you make a change and that change breaks something,
people talk about what happened by focusing on the change and the facts,
not on blaming you. (&ldquo;what about that change caused a problem?&rdquo; instead
of &ldquo;how did Julia break it?&rdquo;)</p>

<p>I also realized that this goes much further than programming, and
<a href="https://twitter.com/marcprecipice">Marc</a> linked me to
<a href="http://justcultureinstitute.com/">this amazing site about restorative justice</a>, which you should also go read.</p>

<p>So if you blame people for breaking things, they&rsquo;ll be more scared to
make changes in the future, and you&rsquo;ll end up with worse programs. Huh.</p>

<h2 id="irrational-fears">Irrational fears</h2>

<p>One last thing that that <a href="https://speakerdeck.com/ryankennedy/fear-driven-development">Fear Driven Development talk</a> talks
about that really resonated with me was &ndash; some fears are irrational,
and that they can <em>infect other people</em>. If you do a deploy, something
goes wrong, and you figure out the cause and fix the problem and nobody
yells at you, hopefully future deploys should not be scary!</p>

<p>But because we are only human and not Logical Robots, sometimes they
still are, and maybe you&rsquo;ll feel nervous about doing deploys for a while
until you see that things are really usually fine.</p>

<p>I think there&rsquo;s a lot more to be said about irrational fears, and I
would be interested to hear more.</p>

<p>This year was the first year that I worked on large software systems
that affect lots of people, and it&rsquo;s been scary sometimes! Next year
will be the second year, and my plan is for it to be easier =)</p>

<p>(thanks to <a href="https://twitter.com/zmagg">Maggie Zhou</a> and <a href="https://twitter.com/kelseyinnis">Kelsey Gilmore-Innis</a> and <a href="https://twitter.com/ansate">Melissa Santos</a> and many others for all saying
excellent things and making me have new thoughts!)</p>

<p>A couple of more talks / posts about fear that I enjoyed:</p>

<ul>
<li><a href="http://www.logiccolony.com/2010/10/16/Fear-of-Programming-Notes.html">Fear of programming</a> (via <a href="https://twitter.com/booleancz">@booleancz</a>)</li>
<li><a href="http://www.hanselman.com/blog/FearDrivenDevelopmentFDD.aspx">Fear Driven Development</a> (totally different, by Scott Hanselman)</li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Harm reduction for developers]]></title>
    <link href="https://jvns.ca/blog/2014/11/18/harm-reduction-for-developers/"/>
    <updated>2014-11-18T08:14:32+00:00</updated>
    <id>https://jvns.ca/blog/2014/11/18/harm-reduction-for-developers/</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Harm_reduction">Harm reduction</a> is an
idea in public health that says basically: people are going to do risky
activities (intravenous drug use, sex, drinking alcohol, maybe abusing
alcohol), and instead of saying &ldquo;just say no to drugs!&rdquo;, we can choose
to help make those activities less risky.</p>

<p>Some examples of measures:</p>

<ul>
<li>needle exchanges and safe injection sites</li>
<li>designated drivers and free taxis home</li>
<li>safer sex classes</li>
</ul>

<p>I don&rsquo;t want to trivialize any of these issues, but I think the idea
that switching out YOU&rsquo;RE WRONG TO DO THAT JUST DON&rsquo;T DO THAT for <em>doing
something to help people be safer</em> is super powerful and useful, and I
see it in discussions of software development all the time.</p>

<p></p>

<p>Some of my favorite writing about writing software is like this.</p>

<ul>
<li>Dan Luu has a fantastic post today called <a href="http://danluu.com/everything-is-broken/">Given That We Aren’t Going to Put Any Effort Into Testing, What’s the Best Way to Test?</a></li>
<li>Unit testing in dynamic languages by itself is like this &ndash; you have
<strong>no idea</strong> if your code works, so you do what you can to get a little
more certainty.</li>
<li>Violet Blue gave a talk at CCC several years ago about <a href="http://violetblue.tumblr.com/hackharmreduction">harm reduction for hackers</a>, which
started me thinking about this in the first place. She mentions
somewhere that people aren&rsquo;t going to stop using Facebook and Twitter
to coordinate actions, and we need to do what we can to make that less
dangerous.</li>
<li>A lot of cryptography software is like this. GPG is incredibly
powerful and incredibly hard to use, and tools like
<a href="https://crypto.cat/">Cryptocat</a> try to make secure communications
more accessible. Key exchange isn&rsquo;t just an algorithmic problem, it&rsquo;s
a social problem!</li>
</ul>

<p>Dan Luu talks about this <em>again</em> (can you tell that I love his blog? I love his blog.) in
<a href="http://danluu.com/everyday-chubby/">Read Along: The Chubby Lock Service for Loosely-Coupled Distributed Systems </a>,
where he quotes a paper about design decisions for a distributed
systems:</p>

<blockquote>
<p>Originally, we did not appreciate the critical need to cache the
absence of files, nor to reuse open file handles. Despite attempts at
education, our developers regularly write loops that retry
indefinitely when a file is not present, or poll a file by opening it
and closing it repeatedly when one might expect they would open the
file just once.</p>
</blockquote>

<p>Instead of yelling at developers for using the library wrong, they added
caching to the library.</p>

<p>In Valerie Aurora&rsquo;s wonderful <a href="http://blog.valerieaurora.org/2014/10/03/operating-systems-war-story-how-feminism-helped-me-solve-one-of-file-systems-oldest-conundrums/">Operating systems war story: How feminism helped me solve one of file systems’ oldest conundrums</a>, she says:</p>

<blockquote>
<p>I try to take that human-centered, feminist approach with other topics
in file systems, including the great fsync()/rename() debate of 2009
(a.k.a “O_PONIES”) in which I argued that file systems developers
should strive to make life easier for developers and users, not
harder.</p>
</blockquote>

<p>Let&rsquo;s do what we can to make life easier for developers and users (and
ourselves!), not harder :)</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What women in technology really think (150 of them, at least)]]></title>
    <link href="https://jvns.ca/blog/2014/11/11/the-best-thing-ive-ever-read-about-women-in-technology/"/>
    <updated>2014-11-11T07:37:29+00:00</updated>
    <id>https://jvns.ca/blog/2014/11/11/the-best-thing-ive-ever-read-about-women-in-technology/</id>
    <content type="html"><![CDATA[<p>spoiler: EVERYONE IS DIFFERENT AND PEOPLE THINK LOTS OF DIFFERENT
THINGS</p>

<p>I&rsquo;ve read tons of articles about or by women who work as developers. I
read a thing yesterday and it was the best thing I&rsquo;ve ever read.
Yesterday I found a link to <a href="http://t.co/mgWCfII0Kn">a survey on Twitter</a>
asking for the experiences of women who work in technology, and did the
survey. There&rsquo;s question at the end that asks</p>

<p><strong>Any other comments you&rsquo;d like to make?</strong></p>

<p>I didn&rsquo;t think much of it at the time &ndash; I said something (that I&rsquo;ve had
an incredibly good experience, but that it makes me very angry that
other people have bad experiences). But then I looked at <em>everyone
else&rsquo;s responses</em>. It&rsquo;s an amazing example of a wide range of women&rsquo;s
opinions and experiences, and I think you should read it. I&rsquo;ve formatted
<a href="https://gist.github.com/jvns/38c1c7572ce200a50227">all of the responses to that question</a> a little
better, or you can see
<a href="https://docs.google.com/a/stripe.com/forms/d/1TGGWz-BxClDC2LEpfon4Aib3Ac0kmnRtjLFLvIrrJc8/viewanalytics?usp=form_confirm">the full survey results</a>.</p>

<p></p>

<p>There are lots of negative comments, from women who are harassed or
disrespected at work. We have a lot of work to do. But there are also a
ton of very positive comments, from women who have supportive colleagues
and mentors and enjoy their work and who feel respected.</p>

<p>I also loved the answers to <strong>What do (or did) you like best about
working in tech?</strong>: the two most popular answers were <em>&ldquo;I enjoy the
actual work&rdquo;</em> and <em>&ldquo;I like solving problems that are really difficult&rdquo;</em>.
(about 75% of people). ME TOO THAT&rsquo;S HOW I FEEL &lt;3</p>

<p>Here are a few excerpts that I found particularly interesting: (though
basically every response is interesting, and I think you should read
them all.)</p>

<blockquote>
<p>I feel that being female and over 40 has made my career feel much more
tenuous. I worry that if I lost my job I wouldn&rsquo;t be able to be hired
again in my field.</p>

<p>I personally have not had many issues arise due to gender, but I feel
this is largely because I tend to behave in a very male way by natural
inclination. I tend not to notice or be disturbed by behaviour many
women find inappropriate or intimidating. I don&rsquo;t think it&rsquo;s rare or
acceptable, just not something I feel worried about for myself. It
does frustrate me a lot to see other women experience it though.</p>

<p>For years I could say I had never felt or been held back in tech
because of my gender. That is no longer the case.</p>

<p>I feel like I&rsquo;ve had things pretty easy, in part because I often get
along as &ldquo;one of the guys.&rdquo;</p>

<p>Currently very very happy in a great, friendly and supportive
environment (being female, a mother, and part-time hasn&rsquo;t stopped me
getting promoted) - so they do exist!</p>

<p>I have a <em>great</em> working environment. [&hellip;] Interestingly, we do have
 one engineer in particular who can be loud and overbearing and could,
 if given enough power, make the environment somewhat hostile &ndash; but
 that&rsquo;s exactly why no one gives him that power.</p>

<p>I&rsquo;ve experienced as much discrimination from female groups as I have
from male-dominated organizations.</p>

<p>As of this past September, I&rsquo;ve been 40 years in tech. It distresses
me that: 1. the situation of women in tech has gotten worse, but 2: a
lot of the women younger than I are behaving as if the problems
they&rsquo;re facing are new ones, and don&rsquo;t look to the past to see what
works/doesn&rsquo;t work, thereby losing traction by repeating some of our
(the older women&rsquo;s) mistakes!</p>

<p>I have been electrical engineer 31 years. Still feeling odd to be only
woman among colleagues</p>

<p>I feel more comfortable in a mostly-male environment. Probably because
that&rsquo;s how it was in my family, I had no sisters, but 3 brothers; and
my relationship with my mother wasn&rsquo;t as great.</p>

<p>I have no idea how much my male colleagues make. How are we supposed
to find that out?</p>

<p>I love this industry and I doubt I&rsquo;ll ever leave it, but it has a long
way to go in order for it to grow up.</p>

<p>While I definitely recognize that this is some (maybe even a lot of)
womens&rsquo; experience, I felt somewhat misled when directed here from
Twitter to take a survey about &ldquo;women in tech.&rdquo; Would love a survey
sometime to focus on us and all the cool stuff what we&rsquo;re actually
doing, rather than continuing to focus on aspects of tech that are
primary brought on by men.</p>

<p>i feel like my employer might look the same as a really bad one based
on the checkmarks but it is actually an overwhelmingly supportive env
and any inappropriate situations are dealt with very well. that they
come up in the first place is an industry wide issue - what
differentiates companies is how they handle it.</p>

<p>I feel extremely fortunate to had a very kind, feminist man as my
ph.d. supervisor. He made sure that myself and other aspiring women
scientists were able to attend professional development seminars that
were specifically aimed at helping women overcome gender-related
discrimination in our field. I hope that in my future career I can pay
it forward and help younger women advance their careers.</p>

<p>Ageism hits women harder than it does men.</p>

<p>There&rsquo;s definitely &ldquo;bro-culture&rdquo; at work. If you&rsquo;re not one of the
bros, forget about going to lunch with upper management, getting that
raise, or getting the best projects. A female coworker of mine was
told to &ldquo;just sit and look pretty&rdquo; at a meeting once.</p>

<p>I&rsquo;m very lucky that I work at a company that highly values equality
and works to make sure our environment is a healthy one for everyone,
with options for professional development and more.</p>

<p>I think I&rsquo;ve been quite fortunate in that I&rsquo;ve worked at companies
that encourage and support women in tech. There have been individual
male colleagues who have at times made work life difficult but I
always felt like the company had my back. These individuals were
spoken to by their managers and the issues were resolved.</p>

<p>Where&rsquo;s the option to say I feel great, valued, treated equally,
competent and successful?</p>

<p>Over the years, it was so subtle, but while men were promoted, I was
sidelined and told I didn&rsquo;t need additional leadership training. I
watched peers go to new heights while I perfected and elevated my
current role, but was never able to move beyond it because I was
perceived as indispensable in that role, but it also locked me in away
from management opportunities.</p>

<p>Aside from my boss, the people at work are great and supportive. I
just feel like I am not good enough of a programmer and I&rsquo;m bringing
down the view of &ldquo;women in tech.&rdquo; I know that&rsquo;s ridiculous and maybe
it&rsquo;s partially that it&rsquo;s a bad job with work that I have a bitch of a
time being excited about. [&hellip;] But the thing is, I genuinely enjoy
programming for myself, and enjoy the culture (aside from the nasty
stuff!) so I can&rsquo;t see myself ever leaving that.</p>

<p>Overall I&rsquo;ve had an overwhelmingly positive experience as a woman in
tech, and consider myself quite fortunate in that respect. I&rsquo;m working
in healthcare IT now, which has a great gender ratio and excellent
people and meaningful work.</p>

<p>The tech industry is a great place to be and one day women will feel
just as welcome as men to be in it. I hope I&rsquo;ll get to see that day
myself.</p>

<p>I realized recently that feeling &ldquo;lucky&rdquo; because I&rsquo;ve only been
sexually harassed by an executive once and denied access to a job once
(that I know of) is insane. It might be getting off easy, but a guy
would have sued. I would leave tech if I had any other skillset. I&rsquo;m
over the frat boy air hockey culture.</p>

<p>I genuinely had trouble thinking of women in tech I admired (aside
from the two bosses I&rsquo;ve had in the last 4 years, who are brilliant).
I also got quite bummed out when I got to the question about my
experiences and realised exactly how many boxes I could tick.</p>

<p>It wasn&rsquo;t an option, but I have considered declining a perk at work,
because I was afraid people would think it was a reward for a sexual
favor. I&rsquo;m always worried that people will think I get ahead, not
because my work is great (it is!), but because I use sex in some way.</p>

<p>I&rsquo;m so tired of being the only technical woman in the room. I&rsquo;m tired
of being the only woman in the room and having it assumed that someone
brought their admin. I&rsquo;m tired of people talking to my husband (also a
software engineer) about technical things and trying to talk to me
about family (I&rsquo;m just as technical as he is, and we don&rsquo;t have kids).
I&rsquo;m tired of people asking when I&rsquo;m going to leave the field as if
it&rsquo;s a given. I&rsquo;m afraid that it is a given.</p>
</blockquote>

<p>These answers give me hope and also break my heart. I hope we can all
make our own organizations better, and make everyone feel more like</p>

<blockquote>
<p>&ldquo;I feel great, valued, treated equally, competent and successful?&rdquo;</p>
</blockquote>

<p>and less like</p>

<blockquote>
<p>&ldquo;I&rsquo;m tired of people asking when I&rsquo;m going to leave the field as if
it&rsquo;s a given. I&rsquo;m afraid that it is a given.&ldquo;.</p>
</blockquote>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asking questions is a superpower]]></title>
    <link href="https://jvns.ca/blog/2014/06/13/asking-questions-is-a-superpower/"/>
    <updated>2014-06-13T22:05:33+00:00</updated>
    <id>https://jvns.ca/blog/2014/06/13/asking-questions-is-a-superpower/</id>
    <content type="html"><![CDATA[<p>There are all kinds of things that I think I &ldquo;should&rdquo; know and don&rsquo;t.
A few things that I don&rsquo;t understand as well as I&rsquo;d like to:</p>

<ul>
<li>Database replication and sharding (seriously how does replication
even work)</li>
<li>How fast a computer can process data (should I expect more or less
than 6GB/s if it&rsquo;s a simple CPU-bound program where the data is
already in RAM?)</li>
<li>How do system calls work, reeeeally? (I do not understand context
switching nearly as well as I could!)</li>
<li>An truly embarrassing amount of basic statistics, even though I have
a math degree.</li>
</ul>

<p>There are lots of much more embarrassing things that I just can&rsquo;t
think of right now.</p>

<p>I&rsquo;ve started trying to ask questions any time I don&rsquo;t understand
something, instead of worrying about whether people will think I&rsquo;m
dumb for not knowing it. This is <em>magical</em>, because it means I can
then learn those things!</p>

<p></p>

<p>One of my very favorite examples of this is how I started learning
about operating systems. At the beginning of Hacker School, I realized
that I legitimately did not know what a kernel was or did more than
&ldquo;er, operating system stuff&rdquo;.</p>

<p>This was super embarrassing! I&rsquo;d been using Linux for 10 years, and I
didn&rsquo;t really understand at all what the basic responsibilities of the
Linux kernel were. Oh no! Instead of hiding under a rock, I <em>asked</em>.
And then people told me, and I wrote
<a href="http://jvns.ca/blog/2013/10/02/day-3-what-does-the-linux-kernel-even-do/">What does the Linux kernel even do?</a>.</p>

<p>I don&rsquo;t know how I would have learned without asking. Now I have given
talks about getting started with understanding the Linux kernel! So
fun!</p>

<p>One surprising thing about asking questions is that when I start
digging into a problem, people who I respect and who know a lot will
sometimes not know the answers at all! For instance, I&rsquo;ll think that
someone totally knows about the Linux kernel, but of course they don&rsquo;t
know everything, and if I&rsquo;m trying to do something specific like write
a rootkit they might not know all the details of how to do it.</p>

<p><a href="http://aphyr.com/">aphyr</a> is a really good example of someone who
asks basic questions and gets unexpected answers. He does research
into whether distributed systems are reliable (linearizable?
consistent? / available?). The results he finds are like
<a href="http://aphyr.com/posts/315-call-me-maybe-rabbitmq">RabbitMQ might lose 40% of your data</a>.
Ooooops. If you don&rsquo;t start asking questions about how RabbitMQ works
from the beginning (in his case, by writing a program called Jepsen
that automates this kind of reliability testing), then you&rsquo;ll never
find that out. (be skeptical! Don&rsquo;t believe what people say even if
they&rsquo;re using fancy words!)</p>

<h2 id="i-don-t-understand">&ldquo;I don&rsquo;t understand.&rdquo;</h2>

<p>Another hard thing is admitting that I don&rsquo;t understand. I try to not
be too judgemental about this &ndash; if someone is explaining something to
me and it doesn&rsquo;t make sense, it&rsquo;s possible that they&rsquo;re explaining it
badly! Or that I&rsquo;m tired! Or any other number of reasons. But if I
don&rsquo;t <em>tell</em> them I&rsquo;m don&rsquo;t understand, I&rsquo;m never going to understand
the damn thing.</p>

<p>So I try to take a deep breath and say cheerfully &ldquo;Nope!&rdquo;, figure
exactly which aspect of the thing I don&rsquo;t understand, and ask a
clarifying question.</p>

<p>As a side effect, when I go to a talk about a subject I&rsquo;m interested in, and I
don&rsquo;t understand something, I&rsquo;m a lot more willing to ask questions like &ldquo;so
what IS &lt;basic concept that wasn&rsquo;t explained&gt;?&ldquo;. Usually people are
really happy to answer!</p>

<h2 id="avoiding-mansplaining">Avoiding mansplaining</h2>

<p>A difficult thing about asking questions is that I have to be pretty
careful about asking the <em>right</em> questions and making it clear which
parts I know already. This is just good hygiene, and makes sure
nobody&rsquo;s time gets wasted.</p>

<p>For instance, I have sometimes said things like &ldquo;I don&rsquo;t know anything
about statistics&rdquo;, which is actually false and sometimes results in
people trying to explain basic probability theory to me, or what an
estimator is, or maybe the difference between a biased and unbiased
estimator. It turns out these are actually things I know! So I need to
be more specific, like &ldquo;can we walk through some basic survival
analysis?&rdquo; (actually a thing I would like to understand!)</p>

<h2 id="huge-success">HUGE SUCCESS</h2>

<p>So! Understanding and learning are more important than feeling smart.
Probably the most important thing I learned at Hacker School was how
to ask questions and admit when I don&rsquo;t understand something. I know
way more things now as a result! (see: this entire blog of things I
have learned)</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anonymous talk review is amazing.]]></title>
    <link href="https://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/"/>
    <updated>2014-05-28T21:17:33+00:00</updated>
    <id>https://jvns.ca/blog/2014/05/28/anonymous-talk-submission-equals-amazing/</id>
    <content type="html"><![CDATA[<p>Coming down from <a href="http://bangbangcon">!!Con</a>, there are a lot of
things I want to talk about. One of the things that surprised and
delighted me the most was how well anonymous talk review worked. I
would like to tell you about this and how we structured our talk
review generally.</p>

<p>We decided to review all the talks anonymously, to try to reduce our
bias. This was a <em>ton</em> of work.
<a href="http://www.nullspace.io/">Alex Clemmer</a> personally anonymized all the
talk proposals and then sat out of the review process because he knew
the identities of the proposers. He did an amazing job (including
watching attached videos and summarizing them for the reviewers!).</p>

<p>I was honestly a bit scared by this &ndash; how were we going to make sure
people were good at public speaking if we didn&rsquo;t even know who they
<em>were</em>?! But it turned out my fears were totally unfounded. We ended
up with</p>

<ul>
<li>a diverse range of talks (about art! compilers! type theory! assembly! games!)</li>
<li>by a good mix of experienced and new speakers</li>
<li>which were very well presented. The quality was even higher than I
expected, and I&rsquo;d worked on reviewing the proposals!</li>
</ul>

<p></p>

<p>Several people told us that they liked the anonymous review because
they were confident they&rsquo;d be judged fairly on the merits of their
proposal.</p>

<p>One of our accepted speakers,
<a href="https://twitter.com/hypotext">Katherine Ye</a>, told us:</p>

<blockquote>
<p>Thank you so much for [anonymizing everything]! It&rsquo;s a relief to
know that I wasn&rsquo;t picked for gender, race, age, or anything like
that.</p>
</blockquote>

<p>I would happily do anonymous review again. It was great.</p>

<h3 id="outreach-to-women">Outreach to women.</h3>

<p>This is going to be a whole separate post, since we worked really hard
on this. Basically: about 30-40% of our talk submissions were from
women, and 40% of the talks we accepted were by women. We didn&rsquo;t
measure other axes of diversity (like race/class/other things).
There&rsquo;s a lot of room for improvement.</p>

<h3 id="168-proposals">168 proposals!!!</h3>

<p>We were blown away by how many people submitted talks. And we only had
space for 24 talks! We had to make super hard decisions, and we didn&rsquo;t
have much time.</p>

<h3 id="talk-review-letter-grades">Talk review: Letter grades</h3>

<p><a href="https://twitter.com/lindsey">Lindsey</a> suggested
<a href="http://scg.unibe.ch/download/champion/#PATTERN5">this way of managing review</a>
after having seen it at academic conferences. Each of us assigned a
proposal a letter grade (A-D), from &ldquo;I will fight for this talk&rdquo;, to
&ldquo;I will fight for this talk to be <em>rejected</em>&rdquo;. We then looked at the
highest &amp; lowest grade for each talk and binned them into AA, AB, AC,
AD, BB, BC, BD, CC, CD, DD. We rejected any talk that didn&rsquo;t have an
A.</p>

<p>If I knew who a proposal was by, I abstained from reviewing it (so
hard!).</p>

<p>This left us with maybe 80 talks that at least one person thought was
excellent-sounding. Still too many!</p>

<h3 id="github-issues-for-discussion">GitHub issues for discussion</h3>

<p>We then used GitHub to discuss talk proposals. We put each talk into
an GitHub issue, and tagged them. Here are the tags we used.</p>

<ul>
<li><code>AA</code> - <code>AD</code> Letter grade ranking</li>
<li><code>accept</code> - Accepted</li>
<li><code>reject</code> - Rejected</li>
<li><code>has-advocate</code> - Someone has advocated this talk in the comments</li>
<li><code>reject-advocate</code> - Someone has argued for rejecting this talk in
the comments</li>
<li>a category: (work/fun/science/product/art/proglang/other)</li>
</ul>

<p>To be accepted, a talk needed an <em>advocate</em> &ndash; someone who would argue
for it to be accepted. Once it had an advocate, we would discuss its
merits in a video chat and decide whether to accept or reject it.</p>

<p>We did that, and after much sadness (what do you mean this is still
too many talks! We can&rsquo;t accept three talks about the Curry-Howard
isomorphism!), we had a program!.</p>

<h3 id="super-personal-responses">Super-personal responses</h3>

<p>Alex, our Chief Anonymizer, did not only do an amazing job of
anonymizing! Not at all. We got a ton of submissions that we would
have <em>loved</em> to accept if we&rsquo;d had more space.</p>

<p>So Alex sent personal emails to people whose talks we rejected saying
how interesting he thought their talks were and which parts
specifically he liked.</p>

<p>If your talk got rejected, you should consider submitting it to
another conference! We probably loved it.</p>

<h3 id="amazing-results">Amazing results</h3>

<p>My favorite things about anonymous talk review were</p>

<ul>
<li>it gave the speakers more confidence that they&rsquo;d be judged fairly</li>
<li>it was impossible to accept less-interesting-sounding talks just
because they were &ldquo;by someone famous&rdquo;. There were amazing talks by
people who had never spoken at a conference before.</li>
<li>it was impossible to give preferential treatment to our friends!
This was a bit sad (some of my friends submitted talks that I knew
were great, and were rejected, and I couldn&rsquo;t do anything), but it
made the conference better.</li>
</ul>

<p>Here&rsquo;s the <a href="http://bangbangcon.com/program.html">final program</a>. There
was weaving! Assembly! How serial protocols work! Logic programming!
Hacking poetry! Robots dancing! Python&rsquo;s 1500-line switch statement!
All of the speakers did an amazing job &ndash; I think for every single
talk I heard someone say &ldquo;Wow, that was my favorite talk!&rdquo;</p>

<p>None of this is to say that anonymous review is the best way to do
talk review. PyCon does not do anonymous review at all, and I think
they do a great job. But it worked very well for us.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don&#39;t feel guilty about not contributing to open source]]></title>
    <link href="https://jvns.ca/blog/2014/04/26/i-dont-feel-guilty-about-not-contributing-to-open-source/"/>
    <updated>2014-04-26T08:56:33+00:00</updated>
    <id>https://jvns.ca/blog/2014/04/26/i-dont-feel-guilty-about-not-contributing-to-open-source/</id>
    <content type="html"><![CDATA[<p>For a long time I had a vague feeling that I <em>should</em> be contributing
to open source more, and that it was in some way a Good Thing. And I
felt a little bit guilty about not doing it enough.</p>

<p>I used to have this dialog with myself pretty often:</p>

<ul>
<li>Okay, Julia, open source is good!</li>
<li>Yeah, I should go do some open source</li>
<li>What project? I don&rsquo;t know. huh.</li>
<li>I use <a href="https://www.pidgin.im/">Pidgin</a>! Maybe that</li>
<li><em>go look at pidgin</em></li>
<li>so many issues! I don&rsquo;t even know where to start</li>
<li>and it&rsquo;s in C! so many code! how do I even!</li>
<li>Give up, feel vaguely guilty</li>
</ul>

<p></p>

<p>I&rsquo;m trying to stop feeling guilty. Now if I&rsquo;m going to contribute to a
project, it needs to be something that I&rsquo;m motivated to do.
<a href="http://blog.melchua.com/">Mel Chua</a> gave a great talk at Hacker
School where she said motivation is made up of <em>competence</em> (I know
how to do this!), <em>autonomy</em> (I can make my own decisions!), and
<em>relatedness</em> (I know why I&rsquo;m doing this!).</p>

<p>In open source there&rsquo;s pretty high autonomy &ndash; nobody&rsquo;s ever going to
force you to work on anything. So what&rsquo;s usually missing is
<em>relatedness</em> and <em>competence</em>.</p>

<p>For relatedness, I&rsquo;ll ask myself:</p>

<p><strong>&ldquo;What do I hope to get out of contributing to this project?</strong></p>

<ul>
<li>I want to know how it works! (contributing to Linux could be super
fun for this reason! Operating systems are amazing! My
<a href="https://github.com/jvns/gzip.jl">gunzip in julia</a> is a project
where I learned a ton.)</li>
<li>I found a bug and I want to fix it! I want to add a feature!</li>
<li>I want to build up a portfolio of programming work to get better
jobs!</li>
<li>I think this project is doing important work and I&rsquo;d like to advance
it! (Kelsey Gilmore-Innis&rsquo;s work on the
<a href="http://antievictionmappingproject.net/">Anti-Eviction Mapping Project</a>
is a great example)</li>
<li>I like spending time with the people who work on this project! (When
I went to Drupal conferences, all the Drupal devs were totally
lovely people and really made me want to contribute to Drupal)</li>
</ul>

<p>For competence, I&rsquo;ll ask:</p>

<p><strong>Is there anything that will stop me from getting work done?</strong></p>

<ul>
<li>Do I know the language this is written in? Is it easy to learn?</li>
<li>Can I set up a dev environment easily on my computer?</li>
<li>How complex is the codebase? Is it approachable? Is the
documentation good?</li>
<li>If I don&rsquo;t know something I need to know, will the community answer
my questions? Will they be jerks? Is the mailing list active?</li>
</ul>

<h2 id="why-i-don-t">why I don&rsquo;t</h2>

<p>I usually don&rsquo;t contribute to open source because of <em>relatedness</em> &ndash;
I don&rsquo;t know what I&rsquo;ll get out of it! A super great example of this is
Drupal. <a href="https://drupal.org/">Drupal</a> is a tremendously important
project. I&rsquo;ve contributed to it before! I could do it again! The
community is extraordinarily welcoming! But it&rsquo;s missing <em>relatedness</em>
for me right now &ndash; I&rsquo;m not developing websites anymore.</p>

<p>Most open source projects fails relatedness &ndash; if I don&rsquo;t use it,
don&rsquo;t want to learn about it right now, don&rsquo;t know anyone who works on
it, and/or don&rsquo;t believe strongly in its mission, I probably don&rsquo;t
want to contribute! This is TOTALLY OKAY. There are tons of people who
are contributing to those projects! They will be okay without me =)</p>

<p>A great example of a project that fails competence is Pidgin, above &ndash;
I might have had some issue with my chat client that I wanted to fix,
but the barrier to entry seemed too high at the time.</p>

<h2 id="why-i-do">why I do!</h2>

<p>Here are some open source-y projects I have worked on and why:</p>

<ul>
<li><a href="https://github.com/ipython/ipython">IPython</a>, because there was a
feature I wanted it to have that it didn&rsquo;t! Now it does! One of my
PRs got merged into IPython and it is SUPER COOL.</li>
<li>A <a href="https://github.com/jvns/pandas-cookbook">pandas cookbook</a>,
because when I learned pandas there weren&rsquo;t as many practical
materials as I wanted! Now there&rsquo;s one more! People are learning
more about pandas because I wrote a thing! THE BEST.</li>
<li><a href="https://github.com/jvns/gzip.jl">gzip in julia</a>, to learn how gzip
worked. Now I know! AWESOME.</li>
</ul>

<p>Working on open source projects can be super fun! Yay!</p>

<h2 id="don-t-feel-guilty">don&rsquo;t feel guilty</h2>

<p>There are so many things you could be doing. If it takes 30 hours of
your time over 3 weeks to fix a network card issue, maybe that&rsquo;s
worthwhile because you learned a lot and your hardware works better!
Or maybe you would rather spend that time with your family or friends
or volunteering or playing soccer or watching movies or working to pay
your rent.</p>

<p>I sometimes hear people say &ldquo;you should write open source software!&rdquo;
like it&rsquo;s a universal good. Don&rsquo;t. Do it if it makes sense for you! Do
it if you know what you&rsquo;ll get out of it, and you feel that it&rsquo;s worth
your time! If not, do other things instead!</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[&#34;Ask if you have questions&#34; isn&#39;t enough]]></title>
    <link href="https://jvns.ca/blog/2014/04/04/ask-if-you-have-questions-isnt-enough/"/>
    <updated>2014-04-04T23:16:09+00:00</updated>
    <id>https://jvns.ca/blog/2014/04/04/ask-if-you-have-questions-isnt-enough/</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve helped out and taught at a few programming workshops for
beginners now, and I&rsquo;ve noticed something. There are always helpers
who have tons of experience and are super willing to answer questions.
And there&rsquo;s always an announcement where someone says &ldquo;Here are the
helpers! They are here just to help you. Raise your hand if you have
questions!&ldquo;.</p>

<p>And it&rsquo;s not enough. Inevitably people will not ask because they&rsquo;re
scared or they think it&rsquo;s their fault and then they&rsquo;ll get stuck.</p>

<p>Here are some things I try to do when I help out at workshops.</p>

<p></p>

<ul>
<li>Circulate! Ask people &ldquo;hey are you okay? Everything working well?&rdquo;</li>
<li>If everybody&rsquo;s saying yes, some of them are not okay and just not
telling you. Ask more questions! &ldquo;How are you finding it so far?&rdquo;.
If you talk to someone for a minute sometimes they&rsquo;ll come out with
&ldquo;well everything is fine but this weird thing is happening&hellip; can
you take a look?&rdquo;</li>
<li>Watch out for confused faces and sad people! Go talk to people with
confused faces and try to see how they&rsquo;re doing!</li>
<li>Keep asking the same people if they&rsquo;re okay over and over again. If
you keep talking to them, they&rsquo;ll be much more likely to ask you
when they <em>do</em> have a problem.</li>
<li>When someone raises their hand I have a lot of dialogues like this:

<ul>
<li>Hey I have a ques-</li>
<li>GREAT. I LOVE QUESTIONS. WHAT IS YOUR QUESTION</li>
<li><em>question question</em></li>
<li>That&rsquo;s definitely something we can solve! Oh that&rsquo;s actually a
mistake in the directions! That&rsquo;s totally our fault! Sorry about
that!</li>
</ul></li>
<li>I really do like answering programming questions, so I act super
excited about it. I think/hope this makes it easier for people to
ask me because they don&rsquo;t feel like it&rsquo;s a burden.</li>
<li>A script: I love questions! We can solve that for sure! Lots of
other people are having that problem! You&rsquo;re doing great! I&rsquo;m happy
you&rsquo;re here!</li>
</ul>

<p>It feels weird to ask the same people if they&rsquo;re doing okay over and
over and over and over and over again, but I think it really does
help.</p>

<p>This feels more effective and like a better use of my time as a helper
than standing in the corner waiting for someone to flag me down. And
more fun!</p>]]></content>
  </entry>
  
</feed>